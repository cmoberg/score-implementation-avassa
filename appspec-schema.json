{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "additionalProperties": false,
  "properties": {
    "labels": {
      "additionalProperties": {
        "description": "A label value is a string that doesn't contain whitespaces or\nparenthesis.\n\nA single value is a shorthand for an array with one item.",
        "oneOf": [
          {
            "description": "A label value is a string that doesn't contain whitespaces or\nparenthesis.\n\nA single value is a shorthand for an array with one item.",
            "format": "label-value",
            "type": "string"
          },
          {
            "items": {
              "description": "A label value is a string that doesn't contain whitespaces or\nparenthesis.\n\nA single value is a shorthand for an array with one item.",
              "format": "label-value",
              "type": "string"
            },
            "type": "array"
          }
        ],
        "x-additionalPropertiesName": "name"
      },
      "description": "Map of string keys and values that can be used to\ncategorize applications.  These labels are not used\ndirectly by system.\n\nA label name consists of an optional prefix followed by `/`,\nfollowed by a name segment.\nThe optional prefix is a DNS host name (must match inet:domain-name).\nThe name segment must match ava:name.\n\nThe prefix `system` is used for labels assigned by the system.\n\nLabel names without prefixes are reserved for application owners.\n\nFor example:\n\n  - `system/controller`\n  - `example.com/location.city`\n  - `example.com/color`\n  - `color`\n\n\n",
      "type": "object"
    },
    "name": {
      "description": "The name of the application.",
      "format": "name",
      "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
      "type": "string"
    },
    "network": {
      "additionalProperties": false,
      "description": "",
      "properties": {
        "shared-application-network": {
          "description": "If this field is set, then the application is connected to a\nshared application network.  If multiple applications within\nthe same site belonging to the same tenant are referring to\nthe same shared application network, then they are connected\nto the same isolated network and can talk among each other.\n\nBecause the service name is registered in the application\nnetwork's DNS server, it is the responsibility of the\napplication owner to make sure there are no overlap in\nservice names between the applications connected to the same\nnetwork.  Otherwise the behavior is undefined.\n\nIf this field is not set, then the application gets its own\nprivate network that is not shared with other applications.",
          "format": "name",
          "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
          "type": "string"
        }
      },
      "type": "object"
    },
    "on-mutable-variable-change": {
      "default": "restart-service-instance",
      "description": "\n- `upgrade-application`: Run the application upgrade procedure.\n- `restart-service-instance`: Restart affected service instances.  The service instances are restarted without the coordination that `upgrade-application` provides.  This is the quickest way to change the service instances, but it means that there might be no service instances running for a short period of time.\n- `ignore`: Do not do anything.<br/>This can be useful if the containers for example use the mutable variable only when they start.\n\nControls what happens if a mutable variable that is\nreferenced in a container's `env`, `cmd`, or `entrypoint` is\nchanged.",
      "format": "enumeration",
      "type": "string"
    },
    "resources": {
      "additionalProperties": false,
      "description": "Constraints on per-application resources.",
      "properties": {
        "network": {
          "additionalProperties": false,
          "description": "Network constraints per application and host.",
          "properties": {
            "downstream-bandwidth-per-host": {
              "description": "\n- *unlimited*:  - `unlimited`\n- *undefined*\nBandwidth specification in bits per second with with SI prefixes (kbit/s,\nMbit/s, Gbit/s) (powers of 1000) or ISO/IEC prefixes (Kibit/s, Mibit/s,\nGibit/s) (powers of 1024).  For example `12 Gibit/s`.\n\nBandwidth available for inbound traffic.",
              "format": "bandwidth",
              "type": "string"
            },
            "upstream-bandwidth-per-host": {
              "description": "\n- *unlimited*:  - `unlimited`\n- *undefined*\nBandwidth specification in bits per second with with SI prefixes (kbit/s,\nMbit/s, Gbit/s) (powers of 1000) or ISO/IEC prefixes (Kibit/s, Mibit/s,\nGibit/s) (powers of 1024).  For example `12 Gibit/s`.\n\nBandwidth available for outbound traffic leaving the host.",
              "format": "bandwidth",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "services": {
      "description": "",
      "items": {
        "oneOf": [
          {
            "properties": {
              "containers": {
                "description": "Containers that are part of the service.\n\nAll init-containers and containers must have unique names.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "additional-capabilities": {
                      "description": "\n- `chown`: Set the linux capability `CAP_CHOWN` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-chown`.\n- `dac-override`: Set the linux capability `CAP_DAC_OVERRIDE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-dac-override`.\n- `dac-read-search`: Set the linux capability `CAP_DAC_READ_SEARCH` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-dac-read-search`.\n- `fowner`: Set the linux capability `CAP_FOWNER` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-fowner`.\n- `fsetid`: Set the linux capability `CAP_FSETID` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-fsetid`.\n- `kill`: Set the linux capability `CAP_KILL` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-kill`.\n- `setgid`: Set the linux capability `CAP_SETGID` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-setgid`.\n- `setuid`: Set the linux capability `CAP_SETUID` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-setuid`.\n- `setpcap`: Set the linux capability `CAP_SETPCAP` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-setpcap`.\n- `linux-immutable`: Set the linux capability `CAP_LINUX_IMMUTABLE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-linux-immutable`.\n- `net-bind-service`: Set the linux capability `CAP_NET_BIND_SERVICE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-net-bind-service`.\n- `net-broadcast`: Set the linux capability `CAP_NET_BROADCAST` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-net-broadcast`.\n- `net-admin`: Set the linux capability `CAP_NET_ADMIN` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-net-admin`.\n- `net-raw`: Set the linux capability `CAP_NET_RAW` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-net-raw`.\n- `ipc-lock`: Set the linux capability `CAP_IPC_LOCK` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-ipc-lock`.\n- `ipc-owner`: Set the linux capability `CAP_IPC_OWNER` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-ipc-owner`.\n- `sys-module`: Set the linux capability `CAP_SYS_MODULE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-module`.\n- `sys-rawio`: Set the linux capability `CAP_SYS_RAWIO` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-rawio`.\n- `sys-chroot`: Set the linux capability `CAP_SYS_CHROOT` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-chroot`.\n- `sys-ptrace`: Set the linux capability `CAP_SYS_PTRACE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-ptrace`.\n- `sys-pacct`: Set the linux capability `CAP_SYS_PACCT` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-pacct`.\n- `sys-admin`: Set the linux capability `CAP_SYS_ADMIN` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-admin`.\n- `sys-boot`: Set the linux capability `CAP_SYS_BOOT` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-boot`.\n- `sys-nice`: Set the linux capability `CAP_SYS_NICE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-nice`.\n- `sys-resource`: Set the linux capability `CAP_SYS_RESOURCE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-resource`.\n- `sys-time`: Set the linux capability `CAP_SYS_TIME` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-time`.\n- `sys-tty-config`: Set the linux capability `CAP_SYS_TTY_CONFIG` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-tty-config`.\n- `mknod`: Set the linux capability `CAP_MKNOD` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-mknod`.\n- `lease`: Set the linux capability `CAP_LEASE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-lease`.\n- `audit-write`: Set the linux capability `CAP_AUDIT_WRITE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-audit-write`.\n- `audit-control`: Set the linux capability `CAP_AUDIT_CONTROL` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-audit-control`.\n- `setfcap`: Set the linux capability `CAP_SETFCAP` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-setfcap`.\n- `mac-override`: Set the linux capability `CAP_MAC_OVERRIDE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-mac-override`.\n- `mac-admin`: Set the linux capability `CAP_MAC_ADMIN` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-mac-admin`.\n- `syslog`: Set the linux capability `CAP_SYSLOG` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-syslog`.\n- `wake-alarm`: Set the linux capability `CAP_WAKE_ALARM` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-wake-alarm`.\n- `block-suspend`: Set the linux capability `CAP_BLOCK_SUSPEND` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-block-suspend`.\n- `audit-read`: Set the linux capability `CAP_AUDIT_READ` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-audit-read`.\n\nGrant the container additional capabilities.",
                      "items": {
                        "format": "enumeration",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "approle": {
                      "description": "If set, the container will have SYS_APPROLE_SECRET_ID\navailable as a service variable, so that it can securely\naccess the system API.  The secret id is generated just\nbefore the container is started (or restarted).  It is usable\nonly from the IP address of this service instance.\n\nSee strongbox [approles](/tag/Approles) for details.",
                      "type": "string"
                    },
                    "cmd": {
                      "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nThe order of the entries in this list is significant.\n\nOptional list of arguments to the entrypoint of the container.\n\nIf the `entrypoint` field is not present, and no `Entrypoint`\nexists in the image, then the first item in this list is used\nas the executable to run, and the rest are the parameters to\nthe executable.\n\nIf this field is not present, and no `entrypoint` field is\npresent, the `Cmd` in the container image config is used, if\nit exists.\n\nIf this field is present, and it contains a mutable variable,\nthe system will detect and react on changes in the mutable\nvariable's value.  The behavior is controlled by setting the\nfield `on-mutable-variable-change`.",
                      "items": {
                        "format": "variable-expression",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "container-layer-size": {
                      "description": "Number of bytes with SI prefixes (kB, MB, GB, TB) (powers of\n1000) or ISO/IEC prefixes (KiB, MiB, GiB, TiB) (powers of\n1024).  For example `12GB`, `22.2 MiB`\n\nThe size of the ephemeral read-write container layer, which\nis the container's rootfs. The minimum supported size is 1 MiB.\n\nAny files written into this layer are ephemeral, and removed\nif the container is deleted.\n\nIf the environment does not support layer size limits, the\nvalue of this parameter is ignored.\n\nIf this parameter is not set, the default depends on the\nenvironment.",
                      "format": "size",
                      "type": "string"
                    },
                    "container-log-archive": {
                      "default": false,
                      "description": "Archive the container log if the container for a specific service\ninstance is rescheduled to another host. The default behavior is to\ndelete the container log in this case.\n\nThe archived container log will continue to exist on the same host as\nit was created, but the topic name will be appended with a time stamp\nfor when the archiving was initiated. The time stamp will follows basic\nformat specified in ISO 8601-1:2019.",
                      "type": "boolean"
                    },
                    "container-log-archive-days": {
                      "default": 14,
                      "description": "_Valid when `container-log-archive` is `true`_<br/>_`container-log-archive-days` must be less than\n`container-log-max-days` (if it is set)._\n\nLimits the number of days the container log is archived before it is\ndeleted.",
                      "format": "uint32",
                      "type": "integer"
                    },
                    "container-log-max-days": {
                      "description": "Limits the age of the entries on the volga topic that stores\nthe container's stdout and stderr output to the specified\nnumber of days.\n\nIf this parameter is not configured, the log will only wrap based\non the size.",
                      "format": "uint32",
                      "type": "integer"
                    },
                    "container-log-size": {
                      "default": "100 MB",
                      "description": "\n- *size*: Number of bytes with SI prefixes (kB, MB, GB, TB) (powers of 1000) or ISO/IEC prefixes (KiB, MiB, GiB, TiB) (powers of 1024).  For example `12GB`, `22.2 MiB`\n- *variable-expression*: A string that may contain references to service-specific variables.<br/>Variables are referred to as `${VAR}`, where VAR is the name of the variable.  When `${VAR}` is encountered in these fields, it is substituted with the value of `VAR`.  To get `${`, write `$${`.  For example if the variable `FOO` has the value `bar`, then `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}` is expanded to `foo_${FOO}`.  It is an error to refer to a variable that isn't defined.\n\nThe size of the volga topic that stores the container's stdout and\nstderr output.\n\nIf the size is zero, no output is captured, and no volga topic is\ncreated.\n\nIf the size is non-zero but less than 5 MB, the volga topic will\nuse 5 MB.\n\nIf a variable expression is used, the result of the\nvariable expansion must be a valid `size`.",
                      "format": "size | variable-expression",
                      "type": "string"
                    },
                    "cpu-shares": {
                      "description": "_Valid when: `../cpus`_\n\nThe CPU priority required to run this container. Only applicable in\ncombination with cpus. If not specified, a system default value will\nbe used.",
                      "format": "uint16",
                      "type": "integer"
                    },
                    "cpus": {
                      "description": "Number of CPUs required to run this container. Minimum supported value\nis 0.001. If this parameter is not set, a system default value will be\nused",
                      "format": "decimal64",
                      "type": "string"
                    },
                    "delayed-shutdown-cmd": {
                      "description": "_Valid when: `../../delayed-shutdown`_\n\nThe order of the entries in this list is significant.\n\nInvoked when the service instance is about to do a\ndelayed shutdown.\n\nThe first entry in the list is the executable to run, and the\nrest are the parameters to the executable.\n\nThe following environment variables are set:\n\n  - `SHUTDOWN_REASON`: `upgrade` | `liveness-prove-failure` |\n                       `removed` | `restart` | `drain`\n  - `SHUTDOWN_SECONDS`: number of seconds before the container is\n     stopped\n",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "devices": {
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "device-labels": {
                          "description": "A label name consists of an optional prefix followed by `/`,\nfollowed by a name segment.\nThe optional prefix is a DNS host name (must match inet:domain-name).\nThe name segment must match ava:name.\n\nThe prefix `system` is used for labels assigned by the system.\n\nLabel names without prefixes are reserved for application owners.\n\nFor example:\n\n  - `system/controller`\n  - `example.com/location.city`\n  - `example.com/color`\n  - `color`\n\n\nSpecify devices to be mounted in the container.\nAt least one device must be available for each\nmatch expression in the list. Mount all matching\ndevices.",
                          "items": {
                            "format": "label-name",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "entrypoint": {
                      "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nThe order of the entries in this list is significant.\n\nThe command to execute when the container starts.\n\nIf this field is not present, the `Entrypoint` in the\ncontainer image config is used, if it exists.\n\nIf this field is present, and it contains a mutable variable,\nthe system will detect and react on changes in the mutable\nvariable's value.  The behavior is controlled by setting the\nfield `on-mutable-variable-change`.",
                      "items": {
                        "format": "variable-expression",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "env": {
                      "additionalProperties": {
                        "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nThe value of the environment variable.\n\nIf this field is present, and it contains a mutable variable,\nthe system will detect and react on changes in the mutable\nvariable's value.  The behavior is controlled by setting the\nfield `on-mutable-variable-change`.",
                        "format": "variable-expression",
                        "type": "string",
                        "x-additionalPropertiesName": "name"
                      },
                      "description": "A set of variables that are set in the container's\nenvironment.\n\nThe name of the environment variable.",
                      "type": "object"
                    },
                    "gpu": {
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "gpu-patterns": {
                          "description": "Matching GPU parameters, `==` and `!=`, shell style regex.\nIn addition to this `memory`, `driver-version` and `compute-capability`\nparameters may be used with `<=`, `<`, `>=`, `>` operators for semantic\ncomparison.\n\nKey-Op-Value expressions. The value must be quoted and may contain\nregular expressions when the operator is one of `==` (matches) and\n`!=` (does not match). When the operator is one of `<=`, `<', `>=`, `>`\nthe value is semantically interpreted to be a size (in case of `memory`)\nor a version (in other cases) for comparison.\n\nThe allowed keys are: `name`, `vendor`, `serial`, `memory`,\n`driver-version`, `compute-mode`, `compute-capability`, `display-mode`,\n`id`. The keys are not quoted.\n\nMultiple patterns can be given, separated by a comma. They must\nall be satisfied for the pattern to be considered matching.\n\nShell style regular expressions are allowed.\n\n   ?  - match any character exactly once\n   \\*  - match any character zero or more times\n   [] - match any single character specified in the brackets\n        once, ranges are allowed\n\n_Valid when: `../labels`_\n\nSelect specific GPUs from the set defined by GPU labels.\nIf no patterns are given, then all GPUs referenced by the labels\nare considered for this container. If multiple patterns are\ngiven, then the GPUs matching at least one pattern are selected.",
                          "items": {
                            "format": "gpu-pattern",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "labels": {
                          "description": "A label name consists of an optional prefix followed by `/`,\nfollowed by a name segment.\nThe optional prefix is a DNS host name (must match inet:domain-name).\nThe name segment must match ava:name.\n\nThe prefix `system` is used for labels assigned by the system.\n\nLabel names without prefixes are reserved for application owners.\n\nFor example:\n\n  - `system/controller`\n  - `example.com/location.city`\n  - `example.com/color`\n  - `color`\n\n\nSpecify GPUs to be mounted in the container for passthrough. At\nleast one GPU must be available for each match expression in the\nlist.",
                          "items": {
                            "format": "label-name",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "number-gpus": {
                          "description": "_Valid when: `../labels`_\n\nMount the exact number of GPUs referenced by GPU labels into the\ncontainer. If the number of GPUs referenced by GPU labels is lower\nthan requested by the service then the service instance is not\nscheduled. If the number of GPUs referenced by GPU labels is higher\nthan the requested number, then a subset of these GPUs is mounted\ninto the container.\n\nIf this value is not specified, then all of the GPUs referenced by\nGPU labels are mounted. At least one GPU in total must be referenced\nby the labels for the service instance to be scheduled.",
                          "format": "uint8",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "image": {
                      "description": "The name of the image. If the name of the image begins with a\nregistry address, an automatic pull from that registry will be\nattempted.\n\nWithout a registry name the remote registry configured under\n`/image-registry/remote-registries/default` will be used, and\nif that is not configured the image has to be manually pushed\nto the system before the application can be scheduled.",
                      "type": "string"
                    },
                    "memory": {
                      "description": "Number of bytes with SI prefixes (kB, MB, GB, TB) (powers of\n1000) or ISO/IEC prefixes (KiB, MiB, GiB, TiB) (powers of\n1024).  For example `12GB`, `22.2 MiB`\n\nAmount of memory required to run this container.\nThe minimum supported amount is 6 MiB.\nIf this parameter is not set, a system default value will be used.",
                      "format": "size",
                      "type": "string"
                    },
                    "mounts": {
                      "description": "",
                      "items": {
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "mount-path": {
                                "description": "Absolute filesystem path with a leading slash.\nNo . or .. components are allowed.\n\n_The `mount-path` must be unique._\n\nThe full name of the directory where the volume will be\nmounted in the container.",
                                "format": "absolute-filepath",
                                "type": "string"
                              }
                            },
                            "title": "all",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "files": {
                                "description": "Mount only the listed files from the volume.",
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "mount-path": {
                                      "description": "Absolute filesystem path with a leading slash.\nNo . or .. components are allowed.\n\n_The `mount-path` must be unique._\n\nThe full name of the file when it is mounted in the\ncontainer.  If this parameter is not configured, the\nfile is mounted as its `name`.",
                                      "format": "absolute-filepath",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Mount this file from the volume.\n\nIf the volume references a filesystem, this name is the full\nname of the file in the filesystem.\n\nIf the volume references a config map, this name is the name\nof an item in the config map.\n\nIf the volume references a vault secret, this name is\nthe name of an entry in the secret's `dict`.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "title": "files",
                            "type": "object"
                          }
                        ],
                        "properties": {
                          "mode": {
                            "description": "\n- `read-only`\n- `read-write`\n\nIf not set, the default depends on the volume type.",
                            "format": "enumeration",
                            "type": "string"
                          },
                          "volume-name": {
                            "description": "_Must be true: `../../../volumes[name = current()]`_\n\nRefers to a volume defined in the service's `volumes` list.",
                            "format": "name",
                            "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
                            "type": "string"
                          }
                        },
                        "required": [
                          "volume-name"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "",
                      "format": "name",
                      "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
                      "type": "string"
                    },
                    "no-builtin-init": {
                      "description": "Must have the value `true`.\n\nStart the container without the builtin init process.  This\nmeans that the first process that is started is responsible for\nforwarding signals and reaping child processes.",
                      "type": "boolean"
                    },
                    "on-mounted-file-change": {
                      "additionalProperties": false,
                      "default": "restart",
                      "description": "Define what should be done if data is changed in a mounted\nconfig map or in a mounted vault secret.\n\nThe default is to restart the container.",
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "restart": {
                              "default": true,
                              "description": "If set to `true`, the container is restarted in the event\nthat mounted data is changed.  If set to `false`, nothing\nhappens when mounted data is changed.",
                              "type": "boolean"
                            }
                          },
                          "title": "restart",
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "cmd": {
                              "description": "The order of the entries in this list is significant.\n\nIf the mounted data is changed, this command is executed\nin the container.  It can e.g., send a HUP signal to some\ndaemon.\n\nThe first entry in the list is the executable to run, and\nthe rest are the parameters to the executable.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "title": "cmd",
                          "type": "object"
                        }
                      ],
                      "properties": {},
                      "type": "object"
                    },
                    "probes": {
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "liveness": {
                          "additionalProperties": false,
                          "description": "",
                          "oneOf": [
                            {
                              "additionalProperties": false,
                              "properties": {
                                "http": {
                                  "additionalProperties": false,
                                  "description": "A GET request is sent to the container's ip address, to\nthe specified port, with the given path, including the\nspecified request-headers, if any.\n\nAn HTTP response code of 2xx or 3xx is considered\na successful invocation.",
                                  "properties": {
                                    "host": {
                                      "description": "Host name to put in the `Host:` header when issuing\nthe GET request.  If not set, this defaults to the ip\naddress.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "",
                                      "type": "string"
                                    },
                                    "port": {
                                      "description": "",
                                      "format": "port-number",
                                      "type": "integer"
                                    },
                                    "request-headers": {
                                      "additionalProperties": {
                                        "description": "",
                                        "type": "string",
                                        "x-additionalPropertiesName": "name"
                                      },
                                      "description": "",
                                      "type": "object"
                                    },
                                    "scheme": {
                                      "default": "http",
                                      "description": "\n- `http`\n- `https`\n\n",
                                      "format": "enumeration",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "path",
                                    "port"
                                  ],
                                  "type": "object"
                                }
                              },
                              "title": "http",
                              "type": "object"
                            },
                            {
                              "additionalProperties": false,
                              "properties": {
                                "tcp": {
                                  "additionalProperties": false,
                                  "description": "A successful TCP connect is considered a successful\ninvocation.",
                                  "properties": {
                                    "port": {
                                      "description": "",
                                      "format": "port-number",
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "port"
                                  ],
                                  "type": "object"
                                }
                              },
                              "title": "tcp",
                              "type": "object"
                            },
                            {
                              "additionalProperties": false,
                              "properties": {
                                "exec": {
                                  "additionalProperties": false,
                                  "description": "If the command exits with status 0, the invocation is\nconsidered successful.\n\nWhile normally only one instance of an exec probe is run,\nin some cases the probe needs to be restarted before\nit had a chance to complete. As there is no technical\npossibility to stop the currently running probe, the new probe\nmust be prepared that an instance of a probe may already be\nrunning and be able to handle this scenario, aborting the old\nprobe if necessary. This is specific to the probes executed\nperiodically, i.e., readiness and liveness probes.",
                                  "properties": {
                                    "cmd": {
                                      "description": "The order of the entries in this list is significant.\n\nThe first entry in the list is the executable to run, and\nthe rest are the parameters to the executable.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "cmd"
                                  ],
                                  "type": "object"
                                }
                              },
                              "title": "exec",
                              "type": "object"
                            }
                          ],
                          "properties": {
                            "failure-threshold": {
                              "default": 3,
                              "description": "Minimum number of consecutive failed invocations for the\nprobe to be considered failed.",
                              "format": "uint32",
                              "type": "integer"
                            },
                            "initial-delay": {
                              "default": "0s",
                              "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nInitial delay before starting the first invocation.",
                              "format": "duration",
                              "type": "string"
                            },
                            "period": {
                              "default": "10s",
                              "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nHow often the probe is invoked.",
                              "format": "duration",
                              "type": "string"
                            },
                            "success-threshold": {
                              "default": 1,
                              "description": "Minimum number of consecutive successful invocations for\nthe probe to considered successful.",
                              "format": "uint32",
                              "type": "integer"
                            },
                            "timeout": {
                              "default": "1s",
                              "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nThe invocation is considered failed if it hasn't returned\nwithin this time.",
                              "format": "duration",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "readiness": {
                          "additionalProperties": false,
                          "description": "",
                          "oneOf": [
                            {
                              "additionalProperties": false,
                              "properties": {
                                "http": {
                                  "additionalProperties": false,
                                  "description": "A GET request is sent to the container's ip address, to\nthe specified port, with the given path, including the\nspecified request-headers, if any.\n\nAn HTTP response code of 2xx or 3xx is considered\na successful invocation.",
                                  "properties": {
                                    "host": {
                                      "description": "Host name to put in the `Host:` header when issuing\nthe GET request.  If not set, this defaults to the ip\naddress.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "",
                                      "type": "string"
                                    },
                                    "port": {
                                      "description": "",
                                      "format": "port-number",
                                      "type": "integer"
                                    },
                                    "request-headers": {
                                      "additionalProperties": {
                                        "description": "",
                                        "type": "string",
                                        "x-additionalPropertiesName": "name"
                                      },
                                      "description": "",
                                      "type": "object"
                                    },
                                    "scheme": {
                                      "default": "http",
                                      "description": "\n- `http`\n- `https`\n\n",
                                      "format": "enumeration",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "path",
                                    "port"
                                  ],
                                  "type": "object"
                                }
                              },
                              "title": "http",
                              "type": "object"
                            },
                            {
                              "additionalProperties": false,
                              "properties": {
                                "tcp": {
                                  "additionalProperties": false,
                                  "description": "A successful TCP connect is considered a successful\ninvocation.",
                                  "properties": {
                                    "port": {
                                      "description": "",
                                      "format": "port-number",
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "port"
                                  ],
                                  "type": "object"
                                }
                              },
                              "title": "tcp",
                              "type": "object"
                            },
                            {
                              "additionalProperties": false,
                              "properties": {
                                "exec": {
                                  "additionalProperties": false,
                                  "description": "If the command exits with status 0, the invocation is\nconsidered successful.\n\nWhile normally only one instance of an exec probe is run,\nin some cases the probe needs to be restarted before\nit had a chance to complete. As there is no technical\npossibility to stop the currently running probe, the new probe\nmust be prepared that an instance of a probe may already be\nrunning and be able to handle this scenario, aborting the old\nprobe if necessary. This is specific to the probes executed\nperiodically, i.e., readiness and liveness probes.",
                                  "properties": {
                                    "cmd": {
                                      "description": "The order of the entries in this list is significant.\n\nThe first entry in the list is the executable to run, and\nthe rest are the parameters to the executable.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "cmd"
                                  ],
                                  "type": "object"
                                }
                              },
                              "title": "exec",
                              "type": "object"
                            }
                          ],
                          "properties": {
                            "failure-threshold": {
                              "default": 3,
                              "description": "Minimum number of consecutive failed invocations for the\nprobe to be considered failed.",
                              "format": "uint32",
                              "type": "integer"
                            },
                            "initial-delay": {
                              "default": "0s",
                              "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nInitial delay before starting the first invocation.",
                              "format": "duration",
                              "type": "string"
                            },
                            "period": {
                              "default": "10s",
                              "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nHow often the probe is invoked.",
                              "format": "duration",
                              "type": "string"
                            },
                            "success-threshold": {
                              "default": 1,
                              "description": "Minimum number of consecutive successful invocations for\nthe probe to considered successful.",
                              "format": "uint32",
                              "type": "integer"
                            },
                            "timeout": {
                              "default": "1s",
                              "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nThe invocation is considered failed if it hasn't returned\nwithin this time.",
                              "format": "duration",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "startup": {
                          "additionalProperties": false,
                          "description": "",
                          "oneOf": [
                            {
                              "additionalProperties": false,
                              "properties": {
                                "http": {
                                  "additionalProperties": false,
                                  "description": "A GET request is sent to the container's ip address, to\nthe specified port, with the given path, including the\nspecified request-headers, if any.\n\nAn HTTP response code of 2xx or 3xx is considered\na successful invocation.",
                                  "properties": {
                                    "host": {
                                      "description": "Host name to put in the `Host:` header when issuing\nthe GET request.  If not set, this defaults to the ip\naddress.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "",
                                      "type": "string"
                                    },
                                    "port": {
                                      "description": "",
                                      "format": "port-number",
                                      "type": "integer"
                                    },
                                    "request-headers": {
                                      "additionalProperties": {
                                        "description": "",
                                        "type": "string",
                                        "x-additionalPropertiesName": "name"
                                      },
                                      "description": "",
                                      "type": "object"
                                    },
                                    "scheme": {
                                      "default": "http",
                                      "description": "\n- `http`\n- `https`\n\n",
                                      "format": "enumeration",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "path",
                                    "port"
                                  ],
                                  "type": "object"
                                }
                              },
                              "title": "http",
                              "type": "object"
                            },
                            {
                              "additionalProperties": false,
                              "properties": {
                                "tcp": {
                                  "additionalProperties": false,
                                  "description": "A successful TCP connect is considered a successful\ninvocation.",
                                  "properties": {
                                    "port": {
                                      "description": "",
                                      "format": "port-number",
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "port"
                                  ],
                                  "type": "object"
                                }
                              },
                              "title": "tcp",
                              "type": "object"
                            },
                            {
                              "additionalProperties": false,
                              "properties": {
                                "exec": {
                                  "additionalProperties": false,
                                  "description": "If the command exits with status 0, the invocation is\nconsidered successful.\n\nWhile normally only one instance of an exec probe is run,\nin some cases the probe needs to be restarted before\nit had a chance to complete. As there is no technical\npossibility to stop the currently running probe, the new probe\nmust be prepared that an instance of a probe may already be\nrunning and be able to handle this scenario, aborting the old\nprobe if necessary. This is specific to the probes executed\nperiodically, i.e., readiness and liveness probes.",
                                  "properties": {
                                    "cmd": {
                                      "description": "The order of the entries in this list is significant.\n\nThe first entry in the list is the executable to run, and\nthe rest are the parameters to the executable.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "cmd"
                                  ],
                                  "type": "object"
                                }
                              },
                              "title": "exec",
                              "type": "object"
                            }
                          ],
                          "properties": {
                            "failure-threshold": {
                              "default": 3,
                              "description": "Minimum number of consecutive failed invocations for the\nprobe to be considered failed.",
                              "format": "uint32",
                              "type": "integer"
                            },
                            "initial-delay": {
                              "default": "0s",
                              "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nInitial delay before starting the first invocation.",
                              "format": "duration",
                              "type": "string"
                            },
                            "period": {
                              "default": "10s",
                              "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nHow often the probe is invoked.",
                              "format": "duration",
                              "type": "string"
                            },
                            "success-threshold": {
                              "default": 1,
                              "description": "Minimum number of consecutive successful invocations for\nthe probe to considered successful.",
                              "format": "uint32",
                              "type": "integer"
                            },
                            "timeout": {
                              "default": "1s",
                              "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nThe invocation is considered failed if it hasn't returned\nwithin this time.",
                              "format": "duration",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "security": {
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "apparmor": {
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "disabled": {
                              "description": "Must have the value `true`.\n\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "selinux": {
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "disabled": {
                              "description": "Must have the value `true`.\n\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "shutdown-timeout": {
                      "default": "10s",
                      "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nThe timeout for a graceful shutdown of a container. After this time the container\nwill be killed forcefully.",
                      "format": "duration",
                      "type": "string"
                    },
                    "user": {
                      "description": "\n- *uint16*\n- *uid-gid*\n\nUser running the first process in the container. By default this\nis defined by the container image. The user must be specified in\nnumeric ID form and may optionally include group ID.",
                      "format": "uint16 | uid-gid",
                      "type": [
                        "integer",
                        "string"
                      ]
                    },
                    "user-namespace": {
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "host": {
                          "description": "Must have the value `true`.\n\nIndicate that the UID/GID inside the container will match the\nUID/GID in the host's default user namespace. This disables user\nnamespace remapping if it is configured on the host. This does not\nhave an effect if the host is set up with no user namespace\nremapping.\n\nUse with care! This mode of operation has a number of limitations.\nIn particular:\n  - containers within the same service running in different user\n    namespaces, that mount the same ephemeral or persistent volume,\n    will have different view of file ownership in the volume\n  - it is a known problem with Docker that the files that belong\n    to the image will have wrong ownership inside the container that\n    runs in a host user namespace mode when the daemon is configured\n    to run with user namespace remapping by default. This problem\n    does not exist in Podman.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "image",
                    "name"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "init-containers": {
                "description": "The order of the entries in this list is significant.\n\nAll `init-containers` run to completion, in the order they\nare specified, before the `containers` are started.  This can\nbe useful e.g., to create files used by the normal\ncontainers.\n\nAll init-containers and containers must have unique names.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "additional-capabilities": {
                      "description": "\n- `chown`: Set the linux capability `CAP_CHOWN` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-chown`.\n- `dac-override`: Set the linux capability `CAP_DAC_OVERRIDE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-dac-override`.\n- `dac-read-search`: Set the linux capability `CAP_DAC_READ_SEARCH` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-dac-read-search`.\n- `fowner`: Set the linux capability `CAP_FOWNER` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-fowner`.\n- `fsetid`: Set the linux capability `CAP_FSETID` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-fsetid`.\n- `kill`: Set the linux capability `CAP_KILL` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-kill`.\n- `setgid`: Set the linux capability `CAP_SETGID` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-setgid`.\n- `setuid`: Set the linux capability `CAP_SETUID` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-setuid`.\n- `setpcap`: Set the linux capability `CAP_SETPCAP` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-setpcap`.\n- `linux-immutable`: Set the linux capability `CAP_LINUX_IMMUTABLE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-linux-immutable`.\n- `net-bind-service`: Set the linux capability `CAP_NET_BIND_SERVICE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-net-bind-service`.\n- `net-broadcast`: Set the linux capability `CAP_NET_BROADCAST` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-net-broadcast`.\n- `net-admin`: Set the linux capability `CAP_NET_ADMIN` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-net-admin`.\n- `net-raw`: Set the linux capability `CAP_NET_RAW` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-net-raw`.\n- `ipc-lock`: Set the linux capability `CAP_IPC_LOCK` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-ipc-lock`.\n- `ipc-owner`: Set the linux capability `CAP_IPC_OWNER` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-ipc-owner`.\n- `sys-module`: Set the linux capability `CAP_SYS_MODULE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-module`.\n- `sys-rawio`: Set the linux capability `CAP_SYS_RAWIO` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-rawio`.\n- `sys-chroot`: Set the linux capability `CAP_SYS_CHROOT` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-chroot`.\n- `sys-ptrace`: Set the linux capability `CAP_SYS_PTRACE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-ptrace`.\n- `sys-pacct`: Set the linux capability `CAP_SYS_PACCT` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-pacct`.\n- `sys-admin`: Set the linux capability `CAP_SYS_ADMIN` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-admin`.\n- `sys-boot`: Set the linux capability `CAP_SYS_BOOT` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-boot`.\n- `sys-nice`: Set the linux capability `CAP_SYS_NICE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-nice`.\n- `sys-resource`: Set the linux capability `CAP_SYS_RESOURCE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-resource`.\n- `sys-time`: Set the linux capability `CAP_SYS_TIME` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-time`.\n- `sys-tty-config`: Set the linux capability `CAP_SYS_TTY_CONFIG` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-tty-config`.\n- `mknod`: Set the linux capability `CAP_MKNOD` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-mknod`.\n- `lease`: Set the linux capability `CAP_LEASE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-lease`.\n- `audit-write`: Set the linux capability `CAP_AUDIT_WRITE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-audit-write`.\n- `audit-control`: Set the linux capability `CAP_AUDIT_CONTROL` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-audit-control`.\n- `setfcap`: Set the linux capability `CAP_SETFCAP` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-setfcap`.\n- `mac-override`: Set the linux capability `CAP_MAC_OVERRIDE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-mac-override`.\n- `mac-admin`: Set the linux capability `CAP_MAC_ADMIN` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-mac-admin`.\n- `syslog`: Set the linux capability `CAP_SYSLOG` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-syslog`.\n- `wake-alarm`: Set the linux capability `CAP_WAKE_ALARM` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-wake-alarm`.\n- `block-suspend`: Set the linux capability `CAP_BLOCK_SUSPEND` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-block-suspend`.\n- `audit-read`: Set the linux capability `CAP_AUDIT_READ` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-audit-read`.\n\nGrant the container additional capabilities.",
                      "items": {
                        "format": "enumeration",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "approle": {
                      "description": "If set, the container will have SYS_APPROLE_SECRET_ID\navailable as a service variable, so that it can securely\naccess the system API.  The secret id is generated just\nbefore the container is started (or restarted).  It is usable\nonly from the IP address of this service instance.\n\nSee strongbox [approles](/tag/Approles) for details.",
                      "type": "string"
                    },
                    "cmd": {
                      "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nThe order of the entries in this list is significant.\n\nOptional list of arguments to the entrypoint of the container.\n\nIf the `entrypoint` field is not present, and no `Entrypoint`\nexists in the image, then the first item in this list is used\nas the executable to run, and the rest are the parameters to\nthe executable.\n\nIf this field is not present, and no `entrypoint` field is\npresent, the `Cmd` in the container image config is used, if\nit exists.\n\nIf this field is present, and it contains a mutable variable,\nthe system will detect and react on changes in the mutable\nvariable's value.  The behavior is controlled by setting the\nfield `on-mutable-variable-change`.",
                      "items": {
                        "format": "variable-expression",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "container-layer-size": {
                      "description": "Number of bytes with SI prefixes (kB, MB, GB, TB) (powers of\n1000) or ISO/IEC prefixes (KiB, MiB, GiB, TiB) (powers of\n1024).  For example `12GB`, `22.2 MiB`\n\nThe size of the ephemeral read-write container layer, which\nis the container's rootfs. The minimum supported size is 1 MiB.\n\nAny files written into this layer are ephemeral, and removed\nif the container is deleted.\n\nIf the environment does not support layer size limits, the\nvalue of this parameter is ignored.\n\nIf this parameter is not set, the default depends on the\nenvironment.",
                      "format": "size",
                      "type": "string"
                    },
                    "container-log-archive": {
                      "default": false,
                      "description": "Archive the container log if the container for a specific service\ninstance is rescheduled to another host. The default behavior is to\ndelete the container log in this case.\n\nThe archived container log will continue to exist on the same host as\nit was created, but the topic name will be appended with a time stamp\nfor when the archiving was initiated. The time stamp will follows basic\nformat specified in ISO 8601-1:2019.",
                      "type": "boolean"
                    },
                    "container-log-archive-days": {
                      "default": 14,
                      "description": "_Valid when `container-log-archive` is `true`_<br/>_`container-log-archive-days` must be less than\n`container-log-max-days` (if it is set)._\n\nLimits the number of days the container log is archived before it is\ndeleted.",
                      "format": "uint32",
                      "type": "integer"
                    },
                    "container-log-max-days": {
                      "description": "Limits the age of the entries on the volga topic that stores\nthe container's stdout and stderr output to the specified\nnumber of days.\n\nIf this parameter is not configured, the log will only wrap based\non the size.",
                      "format": "uint32",
                      "type": "integer"
                    },
                    "container-log-size": {
                      "default": "100 MB",
                      "description": "\n- *size*: Number of bytes with SI prefixes (kB, MB, GB, TB) (powers of 1000) or ISO/IEC prefixes (KiB, MiB, GiB, TiB) (powers of 1024).  For example `12GB`, `22.2 MiB`\n- *variable-expression*: A string that may contain references to service-specific variables.<br/>Variables are referred to as `${VAR}`, where VAR is the name of the variable.  When `${VAR}` is encountered in these fields, it is substituted with the value of `VAR`.  To get `${`, write `$${`.  For example if the variable `FOO` has the value `bar`, then `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}` is expanded to `foo_${FOO}`.  It is an error to refer to a variable that isn't defined.\n\nThe size of the volga topic that stores the container's stdout and\nstderr output.\n\nIf the size is zero, no output is captured, and no volga topic is\ncreated.\n\nIf the size is non-zero but less than 5 MB, the volga topic will\nuse 5 MB.\n\nIf a variable expression is used, the result of the\nvariable expansion must be a valid `size`.",
                      "format": "size | variable-expression",
                      "type": "string"
                    },
                    "cpu-shares": {
                      "description": "_Valid when: `../cpus`_\n\nThe CPU priority required to run this container. Only applicable in\ncombination with cpus. If not specified, a system default value will\nbe used.",
                      "format": "uint16",
                      "type": "integer"
                    },
                    "cpus": {
                      "description": "Number of CPUs required to run this container. Minimum supported value\nis 0.001. If this parameter is not set, a system default value will be\nused",
                      "format": "decimal64",
                      "type": "string"
                    },
                    "devices": {
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "device-labels": {
                          "description": "A label name consists of an optional prefix followed by `/`,\nfollowed by a name segment.\nThe optional prefix is a DNS host name (must match inet:domain-name).\nThe name segment must match ava:name.\n\nThe prefix `system` is used for labels assigned by the system.\n\nLabel names without prefixes are reserved for application owners.\n\nFor example:\n\n  - `system/controller`\n  - `example.com/location.city`\n  - `example.com/color`\n  - `color`\n\n\nSpecify devices to be mounted in the container.\nAt least one device must be available for each\nmatch expression in the list. Mount all matching\ndevices.",
                          "items": {
                            "format": "label-name",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "entrypoint": {
                      "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nThe order of the entries in this list is significant.\n\nThe command to execute when the container starts.\n\nIf this field is not present, the `Entrypoint` in the\ncontainer image config is used, if it exists.\n\nIf this field is present, and it contains a mutable variable,\nthe system will detect and react on changes in the mutable\nvariable's value.  The behavior is controlled by setting the\nfield `on-mutable-variable-change`.",
                      "items": {
                        "format": "variable-expression",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "env": {
                      "additionalProperties": {
                        "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nThe value of the environment variable.\n\nIf this field is present, and it contains a mutable variable,\nthe system will detect and react on changes in the mutable\nvariable's value.  The behavior is controlled by setting the\nfield `on-mutable-variable-change`.",
                        "format": "variable-expression",
                        "type": "string",
                        "x-additionalPropertiesName": "name"
                      },
                      "description": "A set of variables that are set in the container's\nenvironment.\n\nThe name of the environment variable.",
                      "type": "object"
                    },
                    "execution-timeout": {
                      "default": "10m",
                      "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nThe maximum time for a init container to complete. After this time the init container\nwill be stopped and if needed killed forcefully.",
                      "format": "duration",
                      "type": "string"
                    },
                    "gpu": {
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "gpu-patterns": {
                          "description": "Matching GPU parameters, `==` and `!=`, shell style regex.\nIn addition to this `memory`, `driver-version` and `compute-capability`\nparameters may be used with `<=`, `<`, `>=`, `>` operators for semantic\ncomparison.\n\nKey-Op-Value expressions. The value must be quoted and may contain\nregular expressions when the operator is one of `==` (matches) and\n`!=` (does not match). When the operator is one of `<=`, `<', `>=`, `>`\nthe value is semantically interpreted to be a size (in case of `memory`)\nor a version (in other cases) for comparison.\n\nThe allowed keys are: `name`, `vendor`, `serial`, `memory`,\n`driver-version`, `compute-mode`, `compute-capability`, `display-mode`,\n`id`. The keys are not quoted.\n\nMultiple patterns can be given, separated by a comma. They must\nall be satisfied for the pattern to be considered matching.\n\nShell style regular expressions are allowed.\n\n   ?  - match any character exactly once\n   \\*  - match any character zero or more times\n   [] - match any single character specified in the brackets\n        once, ranges are allowed\n\n_Valid when: `../labels`_\n\nSelect specific GPUs from the set defined by GPU labels.\nIf no patterns are given, then all GPUs referenced by the labels\nare considered for this container. If multiple patterns are\ngiven, then the GPUs matching at least one pattern are selected.",
                          "items": {
                            "format": "gpu-pattern",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "labels": {
                          "description": "A label name consists of an optional prefix followed by `/`,\nfollowed by a name segment.\nThe optional prefix is a DNS host name (must match inet:domain-name).\nThe name segment must match ava:name.\n\nThe prefix `system` is used for labels assigned by the system.\n\nLabel names without prefixes are reserved for application owners.\n\nFor example:\n\n  - `system/controller`\n  - `example.com/location.city`\n  - `example.com/color`\n  - `color`\n\n\nSpecify GPUs to be mounted in the container for passthrough. At\nleast one GPU must be available for each match expression in the\nlist.",
                          "items": {
                            "format": "label-name",
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "number-gpus": {
                          "description": "_Valid when: `../labels`_\n\nMount the exact number of GPUs referenced by GPU labels into the\ncontainer. If the number of GPUs referenced by GPU labels is lower\nthan requested by the service then the service instance is not\nscheduled. If the number of GPUs referenced by GPU labels is higher\nthan the requested number, then a subset of these GPUs is mounted\ninto the container.\n\nIf this value is not specified, then all of the GPUs referenced by\nGPU labels are mounted. At least one GPU in total must be referenced\nby the labels for the service instance to be scheduled.",
                          "format": "uint8",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "image": {
                      "description": "The name of the image. If the name of the image begins with a\nregistry address, an automatic pull from that registry will be\nattempted.\n\nWithout a registry name the remote registry configured under\n`/image-registry/remote-registries/default` will be used, and\nif that is not configured the image has to be manually pushed\nto the system before the application can be scheduled.",
                      "type": "string"
                    },
                    "memory": {
                      "description": "Number of bytes with SI prefixes (kB, MB, GB, TB) (powers of\n1000) or ISO/IEC prefixes (KiB, MiB, GiB, TiB) (powers of\n1024).  For example `12GB`, `22.2 MiB`\n\nAmount of memory required to run this container.\nThe minimum supported amount is 6 MiB.\nIf this parameter is not set, a system default value will be used.",
                      "format": "size",
                      "type": "string"
                    },
                    "mounts": {
                      "description": "",
                      "items": {
                        "additionalProperties": false,
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "mount-path": {
                                "description": "Absolute filesystem path with a leading slash.\nNo . or .. components are allowed.\n\n_The `mount-path` must be unique._\n\nThe full name of the directory where the volume will be\nmounted in the container.",
                                "format": "absolute-filepath",
                                "type": "string"
                              }
                            },
                            "title": "all",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "files": {
                                "description": "Mount only the listed files from the volume.",
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "mount-path": {
                                      "description": "Absolute filesystem path with a leading slash.\nNo . or .. components are allowed.\n\n_The `mount-path` must be unique._\n\nThe full name of the file when it is mounted in the\ncontainer.  If this parameter is not configured, the\nfile is mounted as its `name`.",
                                      "format": "absolute-filepath",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Mount this file from the volume.\n\nIf the volume references a filesystem, this name is the full\nname of the file in the filesystem.\n\nIf the volume references a config map, this name is the name\nof an item in the config map.\n\nIf the volume references a vault secret, this name is\nthe name of an entry in the secret's `dict`.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "title": "files",
                            "type": "object"
                          }
                        ],
                        "properties": {
                          "mode": {
                            "description": "\n- `read-only`\n- `read-write`\n\nIf not set, the default depends on the volume type.",
                            "format": "enumeration",
                            "type": "string"
                          },
                          "volume-name": {
                            "description": "_Must be true: `../../../volumes[name = current()]`_\n\nRefers to a volume defined in the service's `volumes` list.",
                            "format": "name",
                            "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
                            "type": "string"
                          }
                        },
                        "required": [
                          "volume-name"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "",
                      "format": "name",
                      "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
                      "type": "string"
                    },
                    "no-builtin-init": {
                      "description": "Must have the value `true`.\n\nStart the container without the builtin init process.  This\nmeans that the first process that is started is responsible for\nforwarding signals and reaping child processes.",
                      "type": "boolean"
                    },
                    "security": {
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "apparmor": {
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "disabled": {
                              "description": "Must have the value `true`.\n\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "selinux": {
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "disabled": {
                              "description": "Must have the value `true`.\n\n",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "shutdown-timeout": {
                      "default": "10s",
                      "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nThe timeout for a graceful shutdown of a container. After this time the container\nwill be killed forcefully.",
                      "format": "duration",
                      "type": "string"
                    },
                    "user": {
                      "description": "\n- *uint16*\n- *uid-gid*\n\nUser running the first process in the container. By default this\nis defined by the container image. The user must be specified in\nnumeric ID form and may optionally include group ID.",
                      "format": "uint16 | uid-gid",
                      "type": [
                        "integer",
                        "string"
                      ]
                    },
                    "user-namespace": {
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "host": {
                          "description": "Must have the value `true`.\n\nIndicate that the UID/GID inside the container will match the\nUID/GID in the host's default user namespace. This disables user\nnamespace remapping if it is configured on the host. This does not\nhave an effect if the host is set up with no user namespace\nremapping.\n\nUse with care! This mode of operation has a number of limitations.\nIn particular:\n  - containers within the same service running in different user\n    namespaces, that mount the same ephemeral or persistent volume,\n    will have different view of file ownership in the volume\n  - it is a known problem with Docker that the files that belong\n    to the image will have wrong ownership inside the container that\n    runs in a host user namespace mode when the daemon is configured\n    to run with user namespace remapping by default. This problem\n    does not exist in Podman.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "image",
                    "name"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "title": "containers",
            "type": "object"
          },
          {
            "properties": {
              "vm": {
                "additionalProperties": false,
                "description": "",
                "properties": {
                  "additional-capabilities": {
                    "description": "\n- `chown`: Set the linux capability `CAP_CHOWN` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-chown`.\n- `dac-override`: Set the linux capability `CAP_DAC_OVERRIDE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-dac-override`.\n- `dac-read-search`: Set the linux capability `CAP_DAC_READ_SEARCH` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-dac-read-search`.\n- `fowner`: Set the linux capability `CAP_FOWNER` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-fowner`.\n- `fsetid`: Set the linux capability `CAP_FSETID` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-fsetid`.\n- `kill`: Set the linux capability `CAP_KILL` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-kill`.\n- `setgid`: Set the linux capability `CAP_SETGID` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-setgid`.\n- `setuid`: Set the linux capability `CAP_SETUID` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-setuid`.\n- `setpcap`: Set the linux capability `CAP_SETPCAP` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-setpcap`.\n- `linux-immutable`: Set the linux capability `CAP_LINUX_IMMUTABLE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-linux-immutable`.\n- `net-bind-service`: Set the linux capability `CAP_NET_BIND_SERVICE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-net-bind-service`.\n- `net-broadcast`: Set the linux capability `CAP_NET_BROADCAST` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-net-broadcast`.\n- `net-admin`: Set the linux capability `CAP_NET_ADMIN` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-net-admin`.\n- `net-raw`: Set the linux capability `CAP_NET_RAW` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-net-raw`.\n- `ipc-lock`: Set the linux capability `CAP_IPC_LOCK` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-ipc-lock`.\n- `ipc-owner`: Set the linux capability `CAP_IPC_OWNER` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-ipc-owner`.\n- `sys-module`: Set the linux capability `CAP_SYS_MODULE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-module`.\n- `sys-rawio`: Set the linux capability `CAP_SYS_RAWIO` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-rawio`.\n- `sys-chroot`: Set the linux capability `CAP_SYS_CHROOT` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-chroot`.\n- `sys-ptrace`: Set the linux capability `CAP_SYS_PTRACE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-ptrace`.\n- `sys-pacct`: Set the linux capability `CAP_SYS_PACCT` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-pacct`.\n- `sys-admin`: Set the linux capability `CAP_SYS_ADMIN` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-admin`.\n- `sys-boot`: Set the linux capability `CAP_SYS_BOOT` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-boot`.\n- `sys-nice`: Set the linux capability `CAP_SYS_NICE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-nice`.\n- `sys-resource`: Set the linux capability `CAP_SYS_RESOURCE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-resource`.\n- `sys-time`: Set the linux capability `CAP_SYS_TIME` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-time`.\n- `sys-tty-config`: Set the linux capability `CAP_SYS_TTY_CONFIG` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-sys-tty-config`.\n- `mknod`: Set the linux capability `CAP_MKNOD` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-mknod`.\n- `lease`: Set the linux capability `CAP_LEASE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-lease`.\n- `audit-write`: Set the linux capability `CAP_AUDIT_WRITE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-audit-write`.\n- `audit-control`: Set the linux capability `CAP_AUDIT_CONTROL` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-audit-control`.\n- `setfcap`: Set the linux capability `CAP_SETFCAP` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-setfcap`.\n- `mac-override`: Set the linux capability `CAP_MAC_OVERRIDE` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-mac-override`.\n- `mac-admin`: Set the linux capability `CAP_MAC_ADMIN` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-mac-admin`.\n- `syslog`: Set the linux capability `CAP_SYSLOG` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-syslog`.\n- `wake-alarm`: Set the linux capability `CAP_WAKE_ALARM` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-wake-alarm`.\n- `block-suspend`: Set the linux capability `CAP_BLOCK_SUSPEND` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-block-suspend`.\n- `audit-read`: Set the linux capability `CAP_AUDIT_READ` for the container. In order to use this capability, the tenant must have a policy assigned that allows `container-audit-read`.\n\nGrant the container additional capabilities.",
                    "items": {
                      "format": "enumeration",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "cloud-init": {
                    "additionalProperties": false,
                    "description": "Linux cloud init data parts. Each separate data part will be\nexposed to the container as environment variables:\nVM_CLOUD_INIT_USER_DATA, VM_CLOUD_INIT_META_DATA,\nVM_CLOUD_INIT_VENDOR_DATA and VM_CLOUD_INIT_NETWORK_CONFIG.\n\nFrom the container launch script the environment variables\ncould be used to create necessary cloud init files.",
                    "properties": {
                      "meta-data": {
                        "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\n",
                        "format": "variable-expression",
                        "type": "string"
                      },
                      "network-config": {
                        "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\n",
                        "format": "variable-expression",
                        "type": "string"
                      },
                      "user-data": {
                        "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\n",
                        "format": "variable-expression",
                        "type": "string"
                      },
                      "vendor-data": {
                        "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\n",
                        "format": "variable-expression",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "container-env": {
                    "additionalProperties": {
                      "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nThe value of the environment variable.\n\nIf this field is present, and it contains a mutable variable,\nthe system will detect and react on changes in the mutable\nvariable's value.  The behavior is controlled by setting the\nfield `on-mutable-variable-change`.",
                      "format": "variable-expression",
                      "type": "string",
                      "x-additionalPropertiesName": "name"
                    },
                    "description": "A set of variables that are set in the VM container's environment.\n\nThe name of the environment variable.",
                    "type": "object"
                  },
                  "container-image": {
                    "description": "The name of the VM container image. If the name of the image\nbegins with a registry address, an automatic pull from that\nregistry will be attempted.\n\nWithout a registry name the remote registry configured under\n`/image-registry/remote-registries/default` will be used, and\nif that is not configured the image has to be manually pushed\nto the system before the application can be scheduled.",
                    "type": "string"
                  },
                  "container-log-archive": {
                    "default": false,
                    "description": "Archive the container log if the container for a specific service\ninstance is rescheduled to another host. The default behavior is to\ndelete the container log in this case.\n\nThe archived container log will continue to exist on the same host as\nit was created, but the topic name will be appended with a time stamp\nfor when the archiving was initiated. The time stamp will follows basic\nformat specified in ISO 8601-1:2019.",
                    "type": "boolean"
                  },
                  "container-log-archive-days": {
                    "default": 14,
                    "description": "_Valid when `container-log-archive` is `true`_<br/>_`container-log-archive-days` must be less than\n`container-log-max-days` (if it is set)._\n\nLimits the number of days the container log is archived before it is\ndeleted.",
                    "format": "uint32",
                    "type": "integer"
                  },
                  "container-log-max-days": {
                    "description": "Limits the age of the entries on the volga topic that stores\nthe container's stdout and stderr output to the specified\nnumber of days.\n\nIf this parameter is not configured, the log will only wrap based\non the size.",
                    "format": "uint32",
                    "type": "integer"
                  },
                  "container-log-size": {
                    "default": "100 MB",
                    "description": "\n- *size*: Number of bytes with SI prefixes (kB, MB, GB, TB) (powers of 1000) or ISO/IEC prefixes (KiB, MiB, GiB, TiB) (powers of 1024).  For example `12GB`, `22.2 MiB`\n- *variable-expression*: A string that may contain references to service-specific variables.<br/>Variables are referred to as `${VAR}`, where VAR is the name of the variable.  When `${VAR}` is encountered in these fields, it is substituted with the value of `VAR`.  To get `${`, write `$${`.  For example if the variable `FOO` has the value `bar`, then `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}` is expanded to `foo_${FOO}`.  It is an error to refer to a variable that isn't defined.\n\nThe size of the volga topic that stores the container's stdout and\nstderr output.\n\nIf the size is zero, no output is captured, and no volga topic is\ncreated.\n\nIf the size is non-zero but less than 5 MB, the volga topic will\nuse 5 MB.\n\nIf a variable expression is used, the result of the\nvariable expansion must be a valid `size`.",
                    "format": "size | variable-expression",
                    "type": "string"
                  },
                  "cpu-shares": {
                    "description": "_Valid when: `../cpus`_\n\nThe CPU priority required to run this container. Only applicable in\ncombination with cpus. If not specified, a system default value will\nbe used.",
                    "format": "uint16",
                    "type": "integer"
                  },
                  "cpus": {
                    "description": "Number of CPUs required to run this container. Minimum supported value\nis 0.001. If this parameter is not set, a system default value will be\nused",
                    "format": "decimal64",
                    "type": "string"
                  },
                  "devices": {
                    "additionalProperties": false,
                    "description": "",
                    "properties": {
                      "device-labels": {
                        "description": "A label name consists of an optional prefix followed by `/`,\nfollowed by a name segment.\nThe optional prefix is a DNS host name (must match inet:domain-name).\nThe name segment must match ava:name.\n\nThe prefix `system` is used for labels assigned by the system.\n\nLabel names without prefixes are reserved for application owners.\n\nFor example:\n\n  - `system/controller`\n  - `example.com/location.city`\n  - `example.com/color`\n  - `color`\n\n\nSpecify devices to be mounted in the container.\nAt least one device must be available for each\nmatch expression in the list. Mount all matching\ndevices.",
                        "items": {
                          "format": "label-name",
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "memory": {
                    "description": "Number of bytes with SI prefixes (kB, MB, GB, TB) (powers of\n1000) or ISO/IEC prefixes (KiB, MiB, GiB, TiB) (powers of\n1024).  For example `12GB`, `22.2 MiB`\n\nAmount of memory required to run this container.\nThe minimum supported amount is 6 MiB.\nIf this parameter is not set, a system default value will be used.",
                    "format": "size",
                    "type": "string"
                  },
                  "mounts": {
                    "description": "",
                    "items": {
                      "additionalProperties": false,
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "mount-path": {
                              "description": "Absolute filesystem path with a leading slash.\nNo . or .. components are allowed.\n\n_The `mount-path` must be unique._\n\nThe full name of the directory where the volume will be\nmounted in the container.",
                              "format": "absolute-filepath",
                              "type": "string"
                            }
                          },
                          "title": "all",
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "files": {
                              "description": "Mount only the listed files from the volume.",
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "mount-path": {
                                    "description": "Absolute filesystem path with a leading slash.\nNo . or .. components are allowed.\n\n_The `mount-path` must be unique._\n\nThe full name of the file when it is mounted in the\ncontainer.  If this parameter is not configured, the\nfile is mounted as its `name`.",
                                    "format": "absolute-filepath",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Mount this file from the volume.\n\nIf the volume references a filesystem, this name is the full\nname of the file in the filesystem.\n\nIf the volume references a config map, this name is the name\nof an item in the config map.\n\nIf the volume references a vault secret, this name is\nthe name of an entry in the secret's `dict`.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "title": "files",
                          "type": "object"
                        }
                      ],
                      "properties": {
                        "mode": {
                          "description": "\n- `read-only`\n- `read-write`\n\nIf not set, the default depends on the volume type.",
                          "format": "enumeration",
                          "type": "string"
                        },
                        "volume-name": {
                          "description": "_Must be true: `../../../volumes[name = current()]`_\n\nRefers to a volume defined in the service's `volumes` list.",
                          "format": "name",
                          "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
                          "type": "string"
                        }
                      },
                      "required": [
                        "volume-name"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "",
                    "format": "name",
                    "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
                    "type": "string"
                  },
                  "probes": {
                    "additionalProperties": false,
                    "description": "",
                    "properties": {
                      "liveness": {
                        "additionalProperties": false,
                        "description": "",
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "http": {
                                "additionalProperties": false,
                                "description": "A GET request is sent to the container's ip address, to\nthe specified port, with the given path, including the\nspecified request-headers, if any.\n\nAn HTTP response code of 2xx or 3xx is considered\na successful invocation.",
                                "properties": {
                                  "host": {
                                    "description": "Host name to put in the `Host:` header when issuing\nthe GET request.  If not set, this defaults to the ip\naddress.",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "",
                                    "format": "port-number",
                                    "type": "integer"
                                  },
                                  "request-headers": {
                                    "additionalProperties": {
                                      "description": "",
                                      "type": "string",
                                      "x-additionalPropertiesName": "name"
                                    },
                                    "description": "",
                                    "type": "object"
                                  },
                                  "scheme": {
                                    "default": "http",
                                    "description": "\n- `http`\n- `https`\n\n",
                                    "format": "enumeration",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "path",
                                  "port"
                                ],
                                "type": "object"
                              }
                            },
                            "title": "http",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "tcp": {
                                "additionalProperties": false,
                                "description": "A successful TCP connect is considered a successful\ninvocation.",
                                "properties": {
                                  "port": {
                                    "description": "",
                                    "format": "port-number",
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "port"
                                ],
                                "type": "object"
                              }
                            },
                            "title": "tcp",
                            "type": "object"
                          }
                        ],
                        "properties": {
                          "failure-threshold": {
                            "default": 3,
                            "description": "Minimum number of consecutive failed invocations for the\nprobe to be considered failed.",
                            "format": "uint32",
                            "type": "integer"
                          },
                          "initial-delay": {
                            "default": "0s",
                            "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nInitial delay before starting the first invocation.",
                            "format": "duration",
                            "type": "string"
                          },
                          "period": {
                            "default": "10s",
                            "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nHow often the probe is invoked.",
                            "format": "duration",
                            "type": "string"
                          },
                          "success-threshold": {
                            "default": 1,
                            "description": "Minimum number of consecutive successful invocations for\nthe probe to considered successful.",
                            "format": "uint32",
                            "type": "integer"
                          },
                          "timeout": {
                            "default": "1s",
                            "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nThe invocation is considered failed if it hasn't returned\nwithin this time.",
                            "format": "duration",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "readiness": {
                        "additionalProperties": false,
                        "description": "",
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "http": {
                                "additionalProperties": false,
                                "description": "A GET request is sent to the container's ip address, to\nthe specified port, with the given path, including the\nspecified request-headers, if any.\n\nAn HTTP response code of 2xx or 3xx is considered\na successful invocation.",
                                "properties": {
                                  "host": {
                                    "description": "Host name to put in the `Host:` header when issuing\nthe GET request.  If not set, this defaults to the ip\naddress.",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "",
                                    "format": "port-number",
                                    "type": "integer"
                                  },
                                  "request-headers": {
                                    "additionalProperties": {
                                      "description": "",
                                      "type": "string",
                                      "x-additionalPropertiesName": "name"
                                    },
                                    "description": "",
                                    "type": "object"
                                  },
                                  "scheme": {
                                    "default": "http",
                                    "description": "\n- `http`\n- `https`\n\n",
                                    "format": "enumeration",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "path",
                                  "port"
                                ],
                                "type": "object"
                              }
                            },
                            "title": "http",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "tcp": {
                                "additionalProperties": false,
                                "description": "A successful TCP connect is considered a successful\ninvocation.",
                                "properties": {
                                  "port": {
                                    "description": "",
                                    "format": "port-number",
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "port"
                                ],
                                "type": "object"
                              }
                            },
                            "title": "tcp",
                            "type": "object"
                          }
                        ],
                        "properties": {
                          "failure-threshold": {
                            "default": 3,
                            "description": "Minimum number of consecutive failed invocations for the\nprobe to be considered failed.",
                            "format": "uint32",
                            "type": "integer"
                          },
                          "initial-delay": {
                            "default": "0s",
                            "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nInitial delay before starting the first invocation.",
                            "format": "duration",
                            "type": "string"
                          },
                          "period": {
                            "default": "10s",
                            "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nHow often the probe is invoked.",
                            "format": "duration",
                            "type": "string"
                          },
                          "success-threshold": {
                            "default": 1,
                            "description": "Minimum number of consecutive successful invocations for\nthe probe to considered successful.",
                            "format": "uint32",
                            "type": "integer"
                          },
                          "timeout": {
                            "default": "1s",
                            "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nThe invocation is considered failed if it hasn't returned\nwithin this time.",
                            "format": "duration",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "startup": {
                        "additionalProperties": false,
                        "description": "",
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "http": {
                                "additionalProperties": false,
                                "description": "A GET request is sent to the container's ip address, to\nthe specified port, with the given path, including the\nspecified request-headers, if any.\n\nAn HTTP response code of 2xx or 3xx is considered\na successful invocation.",
                                "properties": {
                                  "host": {
                                    "description": "Host name to put in the `Host:` header when issuing\nthe GET request.  If not set, this defaults to the ip\naddress.",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "",
                                    "format": "port-number",
                                    "type": "integer"
                                  },
                                  "request-headers": {
                                    "additionalProperties": {
                                      "description": "",
                                      "type": "string",
                                      "x-additionalPropertiesName": "name"
                                    },
                                    "description": "",
                                    "type": "object"
                                  },
                                  "scheme": {
                                    "default": "http",
                                    "description": "\n- `http`\n- `https`\n\n",
                                    "format": "enumeration",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "path",
                                  "port"
                                ],
                                "type": "object"
                              }
                            },
                            "title": "http",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "tcp": {
                                "additionalProperties": false,
                                "description": "A successful TCP connect is considered a successful\ninvocation.",
                                "properties": {
                                  "port": {
                                    "description": "",
                                    "format": "port-number",
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "port"
                                ],
                                "type": "object"
                              }
                            },
                            "title": "tcp",
                            "type": "object"
                          }
                        ],
                        "properties": {
                          "failure-threshold": {
                            "default": 3,
                            "description": "Minimum number of consecutive failed invocations for the\nprobe to be considered failed.",
                            "format": "uint32",
                            "type": "integer"
                          },
                          "initial-delay": {
                            "default": "0s",
                            "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nInitial delay before starting the first invocation.",
                            "format": "duration",
                            "type": "string"
                          },
                          "period": {
                            "default": "10s",
                            "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nHow often the probe is invoked.",
                            "format": "duration",
                            "type": "string"
                          },
                          "success-threshold": {
                            "default": 1,
                            "description": "Minimum number of consecutive successful invocations for\nthe probe to considered successful.",
                            "format": "uint32",
                            "type": "integer"
                          },
                          "timeout": {
                            "default": "1s",
                            "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nThe invocation is considered failed if it hasn't returned\nwithin this time.",
                            "format": "duration",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "shutdown-timeout": {
                    "default": "1m",
                    "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nThe timeout for a graceful shutdown of a container. After this time the container\nwill be killed forcefully.",
                    "format": "duration",
                    "type": "string"
                  }
                },
                "required": [
                  "container-image",
                  "name"
                ],
                "type": "object"
              }
            },
            "title": "vm",
            "type": "object"
          }
        ],
        "properties": {
          "delayed-shutdown": {
            "additionalProperties": false,
            "description": "Normally, if the scheduler needs to shut down a service\ninstance, it sends SIGTERM to each container and waits 10\nseconds for each container to stop.  If a container hasn't\nstopped during this time, the scheduler sends SIGKILL to\nit.  This procedure gives each container time to flush\nbuffers and close open files and sessions.\n\nBut in some cases, this isn't enough.  For example, it may\nbe required that long lived sessions are not immediately\nterminated.  In these cases, delayed shutdown can be\nuseful.\n\nIf `delayed-shutdown` is set, the service instance is not\nimmediately stopped when the scheduler needs to shut it\ndown.  Instead, each container's `delayed-shutdown-cmd` is\nexecuted, the service instance's `oper-status` is set to\n`delayed-shutdown`, and the scheduler waits for the\ncontainer to terminate.  If the container hasn't terminated\nafter the time specified in `timeout`, the scheduler forces\na termination.  If a container in the service doesn't have\na `delayed-shutdown-cmd` specified, it is shut down using\nthe normal procedure described above.\n\nWhen the scheduler performs a delayed shutdown of a service\ninstance, the service instance is treated as `unready`,\nwhich means that a `service-instance-unready` event is\nsent and the service instance's ip addresses are removed\nfrom DNS.\n\nIf the service instance is shut down due to a restart\n(e.g., during upgrade, see below, or due to an explicit\n`restart` action), the scheduler first starts a new service\ninstance, and then it performs a delayed shutdown of the\noriginal service instance, as described above.  Note that\nthe new service instance will get a new name, i.e., a new\nservice instance index.\n\nSince a new service instance is started while the old is\nstill running, it is important that the application code is\nwritten so that it can handle this situation.\n\nIt should be noted that during restarts, when delayed\nshutdown is used, additional resources are being used,\nincluding additional ingress ip addresses.\n\nIf the service instance is shut down due to an upgrade\nwhere the application's version is updated and the upgrade\nmethod is `per-service`, the scheduler performs a restart\nas described above.\n\nIf the application is updated without changing its version,\nor if the upgrade method is `stop-and-restart`, the\nscheduler does not perform a delayed shutdown.  This can be\nuseful to quickly deploy critical fixes.\n\nDuring the delayed shutdown period, no probes are executed.\n\nDelayed shutdown should be used with care, and only when\nthere are critical long lived sessions that cannot just be\nterminated.",
            "properties": {
              "max-number-of-instances": {
                "description": "\n- *uint32*\n- *variable-expression*: A string that may contain references to service-specific variables.<br/>Variables are referred to as `${VAR}`, where VAR is the name of the variable.  When `${VAR}` is encountered in these fields, it is substituted with the value of `VAR`.  To get `${`, write `$${`.  For example if the variable `FOO` has the value `bar`, then `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}` is expanded to `foo_${FOO}`.  It is an error to refer to a variable that isn't defined.\n\nThe maximum number of service instances doing delayed\nshutdown that are allowed to exist at the same time.  If\nthis number of instances is reached, and another instance\nis about to do a delayed shutdown, then the oldest\ninstance doing delayed shutdown is stopped.\n\nIf a variable expression is used, the result of the\nvariable expansion must be an unsigned integer.\n\nIf this leaf is not set, the default is the number of\nreplicas.",
                "format": "uint32 | variable-expression",
                "type": [
                  "integer",
                  "string"
                ]
              },
              "timeout": {
                "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\nHow long time to wait for the service instance to shutdown,\nbefore stopping it.",
                "format": "duration",
                "type": "string"
              }
            },
            "required": [
              "timeout"
            ],
            "type": "object"
          },
          "mode": {
            "description": "\n- `one-per-matching-host`: Run the service in one instance on the hosts selected by `placement/match-host-labels` and `containers/devices/device-labels`.<br/>If no `placement/match-host-labels` or `containers/devices/device-labels` are present, the service is scheduled in one instance on each available host.<br/>If no host is selected, the application's `oper-status` will be `error`.\n- `replicated`: Run the service in the number of instances described by `replicas`.\n\n",
            "format": "enumeration",
            "type": "string"
          },
          "name": {
            "description": "",
            "format": "name",
            "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
            "type": "string"
          },
          "network": {
            "additionalProperties": false,
            "default": "private",
            "description": "",
            "oneOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "ingress-ip-per-instance": {
                    "additionalProperties": false,
                    "description": "",
                    "properties": {
                      "access": {
                        "additionalProperties": false,
                        "default": "allow-all",
                        "description": "**DEPRECATED - will be removed. Use inbound-access instead.**\n\nNote that this parameter is **deprecated**, please use\n`inbound-access` instead.",
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "deny-all": {
                                "description": "Must have the value `true`.\n\n",
                                "type": "boolean"
                              }
                            },
                            "title": "deny-all",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "allow-all": {
                                "description": "Must have the value `true`.\n\n",
                                "type": "boolean"
                              }
                            },
                            "title": "allow-all",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "default-action": {
                                "default": "deny",
                                "description": "\n- `allow`\n- `deny`\n\n_Must be true: `../rules`_",
                                "format": "verdict",
                                "type": "string"
                              },
                              "rules": {
                                "additionalProperties": {
                                  "description": "\n- `allow`\n- `deny`\n\n",
                                  "format": "verdict",
                                  "type": "string",
                                  "x-additionalPropertiesName": "destination"
                                },
                                "description": "",
                                "type": "object"
                              }
                            },
                            "title": "inline-rules",
                            "type": "object"
                          }
                        ],
                        "properties": {},
                        "type": "object"
                      },
                      "dns-records": {
                        "additionalProperties": false,
                        "description": "A list of records that should be added when this\nservice instance is `ready`.  Records must be\nexplicitly added to pre-configured domains (configured\nunder `/dns/zones` - the domain `default` is always\npresent and does not have to be configured).  Records\nthat refer to a non-existing domain will be dropped\nwith a warning.",
                        "properties": {
                          "domains": {
                            "description": "",
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "domain": {
                                  "description": "\n- *default*:  - `default`\n- *variable-expression*: A string that may contain references to service-specific variables.<br/>Variables are referred to as `${VAR}`, where VAR is the name of the variable.  When `${VAR}` is encountered in these fields, it is substituted with the value of `VAR`.  To get `${`, write `$${`.  For example if the variable `FOO` has the value `bar`, then `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}` is expanded to `foo_${FOO}`.  It is an error to refer to a variable that isn't defined.\n\n",
                                  "format": "default | variable-expression",
                                  "type": "string"
                                },
                                "srv": {
                                  "description": "SRV records to add that will refer to this instance.",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "name": {
                                        "description": "\n- *domain-name*\n- *empty-string*\n\n",
                                        "format": "domain-name | empty-string",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "The port on this target host of this service.",
                                        "format": "port-number",
                                        "type": "integer"
                                      },
                                      "priority": {
                                        "description": "The priority of this target host. A client MUST attempt to\ncontact the target host with the lowest-numbered priority it\ncan reach; target hosts with the same priority SHOULD be\ntried in an order defined by the weight field.",
                                        "format": "uint16",
                                        "type": "integer"
                                      }
                                    },
                                    "required": [
                                      "port",
                                      "priority",
                                      "name"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "domain"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "inbound-access": {
                        "additionalProperties": false,
                        "default": "allow-all",
                        "description": "",
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "properties": {
                              "allow-all": {
                                "description": "Must have the value `true`.\n\nIf this field is set, then no inbound connections\nto this service's ingress address are restricted\nbased on the source IP address.",
                                "type": "boolean"
                              }
                            },
                            "title": "allow-all",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "deny-all": {
                                "description": "Must have the value `true`.\n\nIf this field is set, then no inbound connections are\nallowed to this service's ingress address.",
                                "type": "boolean"
                              }
                            },
                            "title": "deny-all",
                            "type": "object"
                          },
                          {
                            "additionalProperties": false,
                            "properties": {
                              "default-action": {
                                "default": "deny",
                                "description": "\n- `allow`\n- `deny`\n\n_Must be true: `../rules`_\n\nWhether to allow or deny packets that do not match any\nof the defined source networks.",
                                "format": "verdict",
                                "type": "string"
                              },
                              "rules": {
                                "additionalProperties": {
                                  "description": "\n- `allow`\n- `deny`\n\n",
                                  "format": "verdict",
                                  "type": "string",
                                  "x-additionalPropertiesName": "source-network"
                                },
                                "description": "List of source networks to allow or deny traffic from.\nApplies to inbound connections to this service's ingress\naddress. Networks with longer prefix are matched first.\n\n",
                                "type": "object"
                              }
                            },
                            "title": "inline-rules",
                            "type": "object"
                          }
                        ],
                        "properties": {},
                        "type": "object"
                      },
                      "match-interface-labels": {
                        "description": "A string that matches:\n\n```\nexpr = ( expr 'and' expr ) /\n       ( expr 'or' expr ) /\n       ( 'not' expr ) /\n       ( label '=' value ) /\n       '{}' /\n       label\n```\n\nThe `{}` expression matches the empty label set.\n\nFor example:\n\n   `(foo and not(bar = xx)) or (baz = red) or {}`\n\n\nAllocate the ingress address on the interface selected\nby the match expression. If this field is not set, then\nthe default interface is used. If this field is set, but\nno interface matches the expression, then the service\nis not scheduled.\n\nThe network-interface labels are configured by the site\nprovider.\n\nThe available network-interface labels in a site can be\nread from `/assigned-sites/SITE` as\n`network-interface-labels`.",
                        "format": "label-match-expression",
                        "type": "string"
                      },
                      "match-ipv4-range-labels": {
                        "description": "A string that matches:\n\n```\nexpr = ( expr 'and' expr ) /\n       ( expr 'or' expr ) /\n       ( 'not' expr ) /\n       ( label '=' value ) /\n       '{}' /\n       label\n```\n\nThe `{}` expression matches the empty label set.\n\nFor example:\n\n   `(foo and not(bar = xx)) or (baz = red) or {}`\n\n\nSelect specific subset of ingress IPv4 ranges to allocate an\ningress IPv4 address from. The ranges and the labels are\nconfigured by the site provider and the application owner\nmust be granted access to these ranges by the site provider.\n\nThis parameter is useful, for example, to be able to assign\nprivate ingress addresses to some services and public\ningress addresses to other services.\n\nThis is only applicable if the ingress method configured on\nthe site is `pool`. If the ingress method configured on\nthe site is `pool` and this parameter is not set, then\nthe ingress address is allocated from the set of ranges with\nno label assigned. If the ingress method configured on the\nsite is other than `pool`, then this parameter is ignored.",
                        "format": "label-match-expression",
                        "type": "string"
                      },
                      "protocols": {
                        "description": "",
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "description": "\n- `tcp`\n- `udp`\n- `sctp`\n- `dccp`\n\n",
                              "format": "enumeration",
                              "type": "string"
                            },
                            "port-ranges": {
                              "description": "A list of inet port numbers and ranges of inet port numbers.\nAll port numbers must be strictly increasing.\n\nFor example, `443,1025-1200` is a valid value, but\n`1025-1200,443` is not valid.\n\nOnly traffic to these ports will be allowed for the\ngiven protocol.",
                              "format": "port-ranges",
                              "pattern": "^([0-9]+(-[0-9]+)?)(,([0-9]+(-[0-9]+)?))*$",
                              "type": "string"
                            }
                          },
                          "required": [
                            "port-ranges",
                            "name"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "outbound-access": {
                    "additionalProperties": false,
                    "default": "deny-all",
                    "description": "Access rules for connections initiated by the service on the\ngateway network.",
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "deny-all": {
                            "description": "Must have the value `true`.\n\nIf this field is set, then no outbound connections are\nallowed on the gateway network for this service.",
                            "type": "boolean"
                          }
                        },
                        "title": "deny-all",
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "allow-all": {
                            "description": "Must have the value `true`.\n\nIf this field is set, then no outbound connections are\nrestricted on the gateway network for this service.\nRestrictions applied by the site provider may still\napply.",
                            "type": "boolean"
                          }
                        },
                        "title": "allow-all",
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "default-action": {
                            "default": "deny",
                            "description": "\n- `allow`\n- `deny`\n\n_Must be true: `../rules`_\n\nWhether to allow or deny packets that do not match any of the\ndefined destinations.",
                            "format": "verdict",
                            "type": "string"
                          },
                          "rules": {
                            "additionalProperties": {
                              "description": "\n- `allow`\n- `deny`\n\n",
                              "format": "verdict",
                              "type": "string",
                              "x-additionalPropertiesName": "destination"
                            },
                            "description": "List of destinations to allow or deny traffic to.\nApplies to outbound connections on the gateway network.\nDestinations with longer prefix are matched first.\n\n",
                            "type": "object"
                          }
                        },
                        "title": "inline-rules",
                        "type": "object"
                      }
                    ],
                    "properties": {},
                    "type": "object"
                  }
                },
                "title": "private",
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "host": {
                    "description": "Must have the value `true`.\n\nAll of the service instances are attached to the default host\nnetworking namespace. This option, especially in combination\nwith NET_ADMIN capability, gives the service instance high\nlevel of control over host's connectivity and must be used\nwith care.\n\nIn order to use this option the tenant must have a policy\nassigned that allows host networking.\n\nWhen the service instance is attached to the default host\nnamespace, none of the private networking infrastructure is\nset up for the service, namely no ingress addresses can be\nallocated and assigned, no outbound access control is set up,\nnone of the application-level network settings have any\neffect on this service and no network metrics are reported.",
                    "type": "boolean"
                  }
                },
                "title": "host",
                "type": "object"
              }
            ],
            "properties": {},
            "type": "object"
          },
          "placement": {
            "additionalProperties": false,
            "description": "_Valid when: `../mode = \"one-per-matching-host\" or ../mode = \"replicated\"`_",
            "properties": {
              "match-host-labels": {
                "description": "A string that matches:\n\n```\nexpr = ( expr 'and' expr ) /\n       ( expr 'or' expr ) /\n       ( 'not' expr ) /\n       ( label '=' value ) /\n       '{}' /\n       label\n```\n\nThe `{}` expression matches the empty label set.\n\nFor example:\n\n   `(foo and not(bar = xx)) or (baz = red) or {}`\n\n\nSchedule the service to a host whose labels matches the given\nexpression.\n\nThe available host labels in a site can be\nread from `/assigned-sites/SITE` as `host-labels`.",
                "format": "label-match-expression",
                "type": "string"
              },
              "preferred-affinity": {
                "additionalProperties": false,
                "description": "_Valid when: `../../mode = \"replicated\"`_\n\nTry to schedule the service to a host that has at least\none instance of each service in `services` scheduled to\nit.\n\nThis can be used to co-locate service instances to the\nsame host.\n\nEach item in `services` is either the name of another service\nin the same application, or on the form\n`APPNAME.SERVICENAME`, in which case it refers to a service\nin another application.\n\nNote that since each instance is scheduled independently,\nif service A has preferred affinity to service B, then\nservice B should also have preferred affinity to service A.",
                "properties": {
                  "services": {
                    "description": "",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "preferred-anti-affinity": {
                "additionalProperties": false,
                "description": "_Valid when: `../../mode = \"replicated\"`_\n\nTry to not schedule the service to a host that has at\nleast one instance of any service in `services` scheduled\nto it.\n\nThis can be used to spread services to different hosts.\n\nEach item in `services` is either the name of another service\nin the same application, or on the form\n`APPNAME.SERVICENAME`, in which case it refers to a service\nin another application.\n\nFor example, a replicated service can list itself in\n`services`, in order to spread the replicas to different\nhosts.\n\nNote that since each instance is scheduled independently,\nif service A has preferred anti affinity to service B,\nthen service B should also have preferred anti affinity\nto service A.",
                "properties": {
                  "services": {
                    "description": "",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "replicas": {
            "description": "\n- *uint32*\n- *variable-expression*: A string that may contain references to service-specific variables.<br/>Variables are referred to as `${VAR}`, where VAR is the name of the variable.  When `${VAR}` is encountered in these fields, it is substituted with the value of `VAR`.  To get `${`, write `$${`.  For example if the variable `FOO` has the value `bar`, then `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}` is expanded to `foo_${FOO}`.  It is an error to refer to a variable that isn't defined.\n\n_Valid when: `../mode = \"replicated\"`_\n\nSpecifies the number of instances of the service that the\nsystem will create.\n\nIf a variable expression is used, the result of the\nvariable expansion must be an unsigned integer.\n\nIf a mutable variable is used in the variable expression, then\nthe number of replicas will change when the mutable variable is\nchanged.",
            "format": "uint32 | variable-expression",
            "type": [
              "integer",
              "string"
            ]
          },
          "share-pid-namespace": {
            "default": false,
            "description": "If set to `true`, the containers in the service run in the\nsame PID namespace.  This can be useful e.g., if a process\nin one container needs to send a signal to a process in\nanother container.",
            "type": "boolean"
          },
          "site-dns-records": {
            "additionalProperties": false,
            "description": "Extra DNS records that should be added to the name servers\non this site as soon as this application is started.\nRecords must be explicitly added to pre-configured domains\n(configured under `/dns/zones` - the domain `default` is\nalways present and does not have to be configured).\nRecords that refer to a non-existing domain will be dropped\nwith a warning.",
            "properties": {
              "domains": {
                "description": "",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "cname": {
                      "description": "",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "cname": {
                            "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\n",
                            "format": "variable-expression",
                            "type": "string"
                          },
                          "name": {
                            "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nThe name portion (without the domain) of the cname\nrecord. The canonical name will be the fqdn of the\napplication service",
                            "format": "variable-expression",
                            "type": "string"
                          }
                        },
                        "required": [
                          "cname",
                          "name"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "domain": {
                      "description": "\n- *default*:  - `default`\n- *variable-expression*: A string that may contain references to service-specific variables.<br/>Variables are referred to as `${VAR}`, where VAR is the name of the variable.  When `${VAR}` is encountered in these fields, it is substituted with the value of `VAR`.  To get `${`, write `$${`.  For example if the variable `FOO` has the value `bar`, then `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}` is expanded to `foo_${FOO}`.  It is an error to refer to a variable that isn't defined.\n\n",
                      "format": "default | variable-expression",
                      "type": "string"
                    },
                    "naptr": {
                      "description": "",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "flags": {
                            "description": "Flags to control aspects of the rewriting and interpretation\nof the fields in the record.  Flags are single characters\nfrom the set A-Z and 0-9.  The case of the alphabetic\ncharacters is not significant.",
                            "format": "string255",
                            "pattern": "^[A-Za-z0-9]*$",
                            "type": "string"
                          },
                          "name": {
                            "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\n",
                            "format": "variable-expression",
                            "type": "string"
                          },
                          "order": {
                            "description": "A 16-bit unsigned integer specifying the order in which the\nNAPTR records MUST be processed in order to accurately\nrepresent the ordered list of Rules.  The ordering is from\nlowest to highest.",
                            "format": "uint16",
                            "type": "integer"
                          },
                          "preference": {
                            "description": "A 16-bit unsigned integer that specifies the order in which\nNAPTR records with equal Order values SHOULD be processed,\nlow numbers being processed before high numbers.",
                            "format": "uint16",
                            "type": "integer"
                          },
                          "regexp": {
                            "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nA substitution expression that is applied to the original\nstring held by the client in order to construct the next\ndomain name to lookup.",
                            "format": "variable-expression",
                            "type": "string"
                          },
                          "replacement": {
                            "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nThe next domain-name to query for depending on the potential\nvalues found in the flags field.",
                            "format": "variable-expression",
                            "type": "string"
                          },
                          "services": {
                            "description": "Specifies the Service Parameters applicable to this\ndelegation path",
                            "format": "string255",
                            "pattern": "^[a-zA-Z0-9+]*$",
                            "type": "string"
                          }
                        },
                        "required": [
                          "replacement",
                          "regexp",
                          "services",
                          "flags",
                          "preference",
                          "order",
                          "name"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "srv": {
                      "description": "",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "description": "\n- *domain-name*\n- *empty-string*\n\n",
                            "format": "domain-name | empty-string",
                            "type": "string"
                          },
                          "port": {
                            "description": "The port on this target host of this service.",
                            "format": "port-number",
                            "type": "integer"
                          },
                          "priority": {
                            "description": "The priority of this target host. A client MUST attempt to\ncontact the target host with the lowest-numbered priority it\ncan reach; target hosts with the same priority SHOULD be\ntried in an order defined by the weight field.",
                            "format": "uint16",
                            "type": "integer"
                          },
                          "target": {
                            "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nThe domain name of the target host.",
                            "format": "variable-expression",
                            "type": "string"
                          },
                          "weight": {
                            "description": "A server selection mechanism.  The weight field specifies a\nrelative weight for entries with the same priority. Larger\nweights SHOULD be given a proportionately higher probability of\nbeing selected.",
                            "format": "uint16",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "target",
                          "weight",
                          "port",
                          "priority",
                          "name"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "domain"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "variables": {
            "description": "A list of variables local to the service specification,\nthat can be used in:\n\n  - `containers/cmd`\n  - `containers/container-log-size`\n  - `containers/entrypoint`\n  - `containers/env/value`\n  - `containers/probes/*/exec/cmd`\n  - `delayed-shutdown/max-number-of-instances`\n  - `init-containers/container-log-size`\n  - `network/ingress-ip-per-instance/dns-records/domains/domain`\n  - `replicas`\n  - `site-dns-records/domains/cname/cname`\n  - `site-dns-records/domains/cname/name`\n  - `site-dns-records/domains/domain`\n  - `site-dns-records/domains/naptr/name`\n  - `site-dns-records/domains/naptr/regexp`\n  - `site-dns-records/domains/naptr/replacement`\n  - `site-dns-records/domains/srv/target`\n  - `volumes/config-map/items/data`\n  - `volumes/vault-secret/secret`\n  - `volumes/vault-secret/vault`\n\nIn the fields above, variables defined in this list are\nreferred to as `${VAR}`, where VAR is the name of the\nvariable, or `${VAR | FUNCTION [ARG..] [| FUNCTION [ARG...]]}`.\n\nWhen `${VAR}` is encountered in these fields, it is\nsubstituted with the value of `VAR`.  If a `FUNCTION` is\npresent, the variable's value is passed through the\n`FUNCTION` before it is substituted.\n\nThe following functions are defined:\n\n  - `indent INTEGER` where `INTEGER` is an integer greater\n    than or equal to 0.  Each line in the input is indented with\n    the given number of space characters.\n\n  - `replace PATTERN REPLACEMENT` where `PATTERN` is a PCRE\n    regular expression, and REPLACEMENT is a string.  All\n    occurrences of `PATTERN` in the variable's value are\n    replaced by `REPLACEMENT`.\n\n  - `squote`. The input is placed within single quotes.\n\n  - `dquote`. The input is placed within double quotes.\n\n  - `quote`. The input is placed within double quotes unless it\n     is already quoted with single or double quotes.\n\n\nWhen an argument to a function is a string, the string can\nbe given in three different ways:\n\n  - without quotes, in which casse in cannot contain space,\n    `|` or `}`.\n\n  - within double quotes, in which case double quotes and\n    backslashes must be escaped with a backslash.\n\n  - within single quotes, in which case single quotes must\n    be escaped with a single quote.\n\nTo get `${`, write `$${`.\n\nFor example if the variable `FOO` has the value `bar`, then\n`foo_${FOO}` is expanded to `foo_bar`, `foo_$${FOO}` is\nexpanded to `foo_${FOO}`, and `foo_${FOO | replace r x} is expanded\nto 'foo_bax`.  It is an error to refer to a variable that\nisn't defined.\n\nIn addition to the variables defined in this list, the\nsystem provides a set of system-defined variabels (see\nbelow for a list of these variables).\n\nA variable is either immutable or mutable.  An immutable\nvariable can not be changed once the service instance has\nbeen created.  A mutable variable refers to some external\nentity which may change while the service instance is\nrunning.  If a mutable variable is used in one of\n\n  - `containers/env/value`\n  - `containers/entrypoint`\n  - `containers/cmd`\n\nthen if the variable's value is modified, the container may\nneed to be restarted.  The behavior is controlled by setting the\nfield `on-mutable-variable-change`.\n\nAll system-defined variables are immutable, unless\nexplicitly indicated below.\n\nThe following system-defined variables are provided:\n\n  - SYS_API_CA_CERT\n    Always available.  Contains the API server's CA certs\n    (one or more) in PEM format.\n  - SYS_APPROLE_SECRET_ID\n    Available if a container has defined an `approle`.\n    Note that since this is set per container, this\n    variable is not available in `volumes`, `site-dns-records`,\n    and `replicas`.\n  - SYS_APP_NET_IPV4_ADDRESS\n    The ipv4 address on the application network.\n    This variable is not available in `site-dns-records` and\n    `replicas`.\n  - SYS_DNS_ZONES\n    Available if the tenant has configured DNS zones.  This\n    is an array of the DNS zones defined for the tenant.\n    The domain of a specific named zone is accessed with\n    the syntax `${SYS_DNS_ZONES[name]}`.  A zone named `default`\n    is always available, and contains the default domain for this\n    tenant. It is accessed using `${SYS_DNS_ZONES[default]}`.\n\n    This is a mutable variable, i.e., its value may change\n    even though the application object itself doesn't change.\n  - SYS_GLOBAL_DOMAIN\n    Always available.  Contains the name of the top level\n    domain used by all sites in the environment.\n  - SYS_GW_NET_IPV4_ADDRESS\n    The ipv4 address on the gateway network.  This is the\n    address that a service must bind to for ingress\n    traffic.  This variable is not available in `site-dns-records`\n    and `replicas`.\n  - SYS_HOST\n    Always available.  Contains the hostname of\n    host the where the service instance is running.\n  - SYS_HOST_DEVICE_LABELS\n    Always available.  This is an array of all device labels defined\n    on the host. The value of a specific label is accessed with the\n    syntax `${SYS_HOST_DEVICE_LABELS[device-label]}`.  The value is\n    the filenames that the device label maps to on the host.\n    If the device label has multiple values, it expands to a\n    semicolon-separated string of these values.\n\n  - SYS_INGRESS_IPV4_ADDRESS\n    Available if an ipv4 ingress ip address has been\n    allocated for the service instance.  This variable is not\n    available in `site-dns-records` and `replicas`.\n  - SYS_SERVICE_INSTANCE_INDEX\n    The unique integer index of the service\n    instance, starting from 1, and increasing for each new\n    replica. This variable is not available in `site-dns-records`\n    and `replicas`.\n  - SYS_SITE\n    Always available.  Contains the name of the site where\n    the service instance is running.\n  - SYS_SITE_LABELS\n    Always available.  This is an array of all labels\n    defined on the site.  The value of a specific label is\n    accessed with the syntax `${SYS_SITE_LABELS[label]}`.\n    If the label has multiple values, it expands to a\n    comma-separated string of these values.  It is an error\n    if no label is given, or if the label doesn't exist.\n\n    This is a mutable variable, i.e., its value may change\n    even though the application object itself doesn't change.\n  - SYS_TENANT\n    Always available.  Contains the name of the tenant.\n  - SYS_CONTAINER_CPUS\n    Available only in the context of a container. Indicates the number of CPUs\n    allocated to the container (fractional with a decimal point). If the\n    number of CPUs is not limited, then this variable is assigned an empty value.\n  - SYS_CONTAINER_MEMORY\n    Available only in the context of a container. Indicates the amount of\n    memory in bytes allocated to the container. If the container's memory is\n    not limited, then this variable is assigned an empty value.\n\n The system-defined variables are also available when\n defining variables in:\n\n   - `value-from-vault-secret/vault`\n   - `value-from-vault-secret/secret`\n",
            "items": {
              "additionalProperties": false,
              "oneOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "value": {
                      "description": "",
                      "type": "string"
                    }
                  },
                  "title": "value",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "value-from-vault-secret": {
                      "additionalProperties": false,
                      "description": "The variable's value is taken from a configured vault's\nsecret.\n\nIf the variable that holds the secret is used in one of:\n\n  - `containers/env/value`\n  - `containers/entrypoint`\n  - `containers/cmd`\n\nthen if the configured vault is modified, the container\nis restarted.  Note that another way to pass secrets to\na container is to create a volume with the secret and\nmount that volume in the container, and use\n`on-mounted-file-change` to specify the desired\nbehavior when the vault is modified.\n\nWhen this field is present, the variable being defined\nis mutable, i.e., its value may change even though the\napplication object itself doesn't change.",
                      "properties": {
                        "from-tenant": {
                          "description": "The name of the tenant that owns the secret.  This parameter\nshould only be set if the secret belongs to another tenant, and the\nsecret has `allow-tenant-access` set.",
                          "format": "name",
                          "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
                          "type": "string"
                        },
                        "key": {
                          "description": "The key of the item in the `dict` in the secret.",
                          "type": "string"
                        },
                        "secret": {
                          "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nTogether with `vault`, refers to a specific\nsecret in a strongbox vault for this tenant.\n\nNote that the image in a container that references this\nvolume in its `mounts` list or `env` must be given explicit\naccess to the secret.  See the strongbox secret documentation\nfor `allow-image-access` for details.\n\nIf the referenced secret defines an `auto-cert`, the\nscheduler will generate a certificate when the service\ninstance is started, and automatically regenerate it when its\n`cert-refresh-time` is reached.  In addition to the\nparameters defined in `auto-cert`, the certificate will have\n`subjectAltName` entries with the ingress ip address and its\ndns names, if defined, and the application network ip address\nand its dns name.",
                          "format": "variable-expression",
                          "type": "string"
                        },
                        "vault": {
                          "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nRefers to a strongbox vault for this tenant.",
                          "format": "variable-expression",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "secret",
                        "vault"
                      ],
                      "type": "object"
                    }
                  },
                  "title": "value-from-vault-secret",
                  "type": "object"
                }
              ],
              "properties": {
                "name": {
                  "description": "",
                  "format": "variable-name",
                  "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "volumes": {
            "description": "Lists the volumes that the service requires.  A service\ninstance won't be scheduled on a host unless the host has\naccess to the required volumes.\n\nNote that a container that needs access to a volume listed\nhere must mount it (in the `container/mounts` list).",
            "items": {
              "additionalProperties": false,
              "oneOf": [
                {
                  "additionalProperties": false,
                  "properties": {
                    "ephemeral-volume": {
                      "additionalProperties": false,
                      "description": "An ephemeral volume is a per service instance locally\nallocated disk space. If an ephemeral volume is required by a\nservice, then the service instances are placed on hosts with\navailable host volumes (configured by the site provider), with\nvolumes allocated on matching host volumes. The selection of\nthe underlying host volume may be controlled with\n'match-volume-labels' expression, where the labels are\nconfigured by the site provider.\n\nSuch volume is persistent if the underlying host volume is\npersistent (the data is preserved on power loss). The data\nin a volume corresponding to a particular service instance\npersists as long as the service instance remains scheduled on\na particular host and the volume remains scheduled on a\nparticular host volume. Note that when the service instance is\nunscheduled, scheduled to another host or the volume is\nscheduled to another host volume, then the data in the volume\nis deleted. This may happen in a range of scenarios, including\nbut not limited to changing a service labels match expression,\nchanging ephemeral volume label match expression, increasing\nsize of the ephemeral volume so there is not enough space on\nthe current host volume, deleting the application etc.\n\nOne ephemeral volume can be shared by multiple containers\nwithin the same service.",
                      "properties": {
                        "file-mode": {
                          "default": "755",
                          "description": "The mountpoint inside the containers mounting this volume\nwill have this file access mode.",
                          "format": "file-mode",
                          "pattern": "^[0-7][0-7][0-7]$",
                          "type": "string"
                        },
                        "file-ownership": {
                          "default": "0:0",
                          "description": "The mountpoint inside the containers mounting this volume\nwill be owned by the specified user and group. Only numerical\nUID and GID are accepted.",
                          "format": "uid-gid",
                          "type": "string"
                        },
                        "match-volume-labels": {
                          "description": "A string that matches:\n\n```\nexpr = ( expr 'and' expr ) /\n       ( expr 'or' expr ) /\n       ( 'not' expr ) /\n       ( label '=' value ) /\n       '{}' /\n       label\n```\n\nThe `{}` expression matches the empty label set.\n\nFor example:\n\n   `(foo and not(bar = xx)) or (baz = red) or {}`\n\n\nSelect a volume that matches the given label match\nexpression.\n\nThe available volume labels in a site can be\nread from `/assigned-sites/SITE` as\n`volume-labels`.",
                          "format": "label-match-expression",
                          "type": "string"
                        },
                        "size": {
                          "description": "Number of bytes with SI prefixes (kB, MB, GB, TB) (powers of\n1000) or ISO/IEC prefixes (KiB, MiB, GiB, TiB) (powers of\n1024).  For example `12GB`, `22.2 MiB`\n\n",
                          "format": "size",
                          "type": "string"
                        }
                      },
                      "required": [
                        "size"
                      ],
                      "type": "object"
                    }
                  },
                  "title": "ephemeral-volume",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "persistent-volume": {
                      "additionalProperties": false,
                      "description": "A persistent volume is a per service instance locally\nallocated disk space. If a persistent volume is required by a\nservice, then the service instances are placed on hosts with\navailable host volumes (configured by the site provider), with\nvolumes allocated on matching host volumes. The selection of\nthe underlying host volume may be controlled with\n'match-volume-labels' expression, where the labels are\nconfigured by the site provider.\n\nThe difference between the persistent and the ephemeral volume\nis that the persistent volume is not automatically removed\nwhen the service is not scheduled on the host, but it is kept\non the host it was first scheduled on until explicitly\nremoved by the application owner or the underlying storage\nspace is explicitly removed by the site provider.\n\nOne persistent volume can be shared by multiple containers\nwithin the same service.",
                      "properties": {
                        "file-mode": {
                          "default": "755",
                          "description": "The mountpoint inside the containers mounting this volume\nwill have this file access mode.",
                          "format": "file-mode",
                          "pattern": "^[0-7][0-7][0-7]$",
                          "type": "string"
                        },
                        "file-ownership": {
                          "default": "0:0",
                          "description": "The mountpoint inside the containers mounting this volume\nwill be owned by the specified user and group. Only numerical\nUID and GID are accepted.",
                          "format": "uid-gid",
                          "type": "string"
                        },
                        "match-volume-labels": {
                          "description": "A string that matches:\n\n```\nexpr = ( expr 'and' expr ) /\n       ( expr 'or' expr ) /\n       ( 'not' expr ) /\n       ( label '=' value ) /\n       '{}' /\n       label\n```\n\nThe `{}` expression matches the empty label set.\n\nFor example:\n\n   `(foo and not(bar = xx)) or (baz = red) or {}`\n\n\nSelect a volume that matches the given label match\nexpression.\n\nThe available volume labels in a site can be\nread from `/assigned-sites/SITE` as\n`volume-labels`.",
                          "format": "label-match-expression",
                          "type": "string"
                        },
                        "size": {
                          "description": "Number of bytes with SI prefixes (kB, MB, GB, TB) (powers of\n1000) or ISO/IEC prefixes (KiB, MiB, GiB, TiB) (powers of\n1024).  For example `12GB`, `22.2 MiB`\n\n",
                          "format": "size",
                          "type": "string"
                        }
                      },
                      "required": [
                        "size"
                      ],
                      "type": "object"
                    }
                  },
                  "title": "persistent-volume",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "system-volume": {
                      "additionalProperties": false,
                      "description": "System volumes are paths bind-mounted from the host filesystem.\nThe paths are defined by the site provider and are referred to\nby the defined name. The application owner must be granted\naccess to a system volume by the site provider before using\nit.",
                      "properties": {
                        "reference": {
                          "description": "",
                          "format": "name",
                          "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
                          "type": "string"
                        }
                      },
                      "required": [
                        "reference"
                      ],
                      "type": "object"
                    }
                  },
                  "title": "system-volume",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "config-map": {
                      "additionalProperties": false,
                      "description": "An inline config map.  Can be used when the config\nfile is static and won't be changed separately from the\nservice.",
                      "properties": {
                        "items": {
                          "description": "The items in the config map are provided as\nmounted files.",
                          "items": {
                            "additionalProperties": false,
                            "oneOf": [
                              {
                                "additionalProperties": false,
                                "properties": {
                                  "data": {
                                    "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nThe contents of the mounted file.\n\nVariables on the form ${VAR} are substituted\nwith the value of VAR in the `variables` list.\n\nThe string '${' can be produced by writing '$${'.",
                                    "format": "variable-expression",
                                    "type": "string"
                                  }
                                },
                                "title": "data",
                                "type": "object"
                              },
                              {
                                "additionalProperties": false,
                                "properties": {
                                  "data-verbatim": {
                                    "description": "The contents of the mounted file.\nNo variable substitution is done on the value.",
                                    "type": "string"
                                  }
                                },
                                "title": "verbatim",
                                "type": "object"
                              }
                            ],
                            "properties": {
                              "file-mode": {
                                "default": "644",
                                "description": "The mountpoint inside the containers mounting this volume\nwill have this file access mode.",
                                "format": "file-mode",
                                "pattern": "^[0-7][0-7][0-7]$",
                                "type": "string"
                              },
                              "file-ownership": {
                                "default": "0:0",
                                "description": "The mountpoint inside the containers mounting this volume\nwill be owned by the specified user and group. Only numerical\nUID and GID are accepted.",
                                "format": "uid-gid",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the mounted file.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "title": "config-map",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "vault-secret": {
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "file-mode": {
                          "default": "400",
                          "description": "The mountpoint inside the containers mounting this volume\nwill have this file access mode.",
                          "format": "file-mode",
                          "pattern": "^[0-7][0-7][0-7]$",
                          "type": "string"
                        },
                        "file-ownership": {
                          "default": "0:0",
                          "description": "The mountpoint inside the containers mounting this volume\nwill be owned by the specified user and group. Only numerical\nUID and GID are accepted.",
                          "format": "uid-gid",
                          "type": "string"
                        },
                        "from-tenant": {
                          "description": "The name of the tenant that owns the secret.  This parameter\nshould only be set if the secret belongs to another tenant, and the\nsecret has `allow-tenant-access` set.",
                          "format": "name",
                          "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
                          "type": "string"
                        },
                        "secret": {
                          "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nTogether with `vault`, refers to a specific\nsecret in a strongbox vault for this tenant.\n\nNote that the image in a container that references this\nvolume in its `mounts` list or `env` must be given explicit\naccess to the secret.  See the strongbox secret documentation\nfor `allow-image-access` for details.\n\nIf the referenced secret defines an `auto-cert`, the\nscheduler will generate a certificate when the service\ninstance is started, and automatically regenerate it when its\n`cert-refresh-time` is reached.  In addition to the\nparameters defined in `auto-cert`, the certificate will have\n`subjectAltName` entries with the ingress ip address and its\ndns names, if defined, and the application network ip address\nand its dns name.",
                          "format": "variable-expression",
                          "type": "string"
                        },
                        "vault": {
                          "description": "A string that may contain references to service-specific variables.\n\nVariables are referred to as `${VAR}`, where VAR is the name of\nthe variable.  When `${VAR}` is encountered in these fields, it\nis substituted with the value of `VAR`.  To get `${`, write\n`$${`.  For example if the variable `FOO` has the value `bar`,\nthen `foo_${FOO}` is expanded to `foo_bar`, and `foo_$${FOO}`\nis expanded to `foo_${FOO}`.  It is an error to refer to a\nvariable that isn't defined.\n\nRefers to a strongbox vault for this tenant.",
                          "format": "variable-expression",
                          "type": "string"
                        }
                      },
                      "required": [
                        "secret",
                        "vault"
                      ],
                      "type": "object"
                    }
                  },
                  "title": "vault-secret",
                  "type": "object"
                }
              ],
              "properties": {
                "name": {
                  "description": "",
                  "format": "name",
                  "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "mode",
          "name"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "upgrade-from": {
      "description": "The order of the entries in this list is significant.\n\nIf present and the application's `version` is changed, the\napplication is first verified that it is possible to upgrade\nfrom the current version to the new version and then upgraded\naccording to this specification.  The list entries are\nchecked in the given order.  If the application's current\n`version` matches the `version-regexp` in the list entry, it\nis used, and the rest of the list entries are ignored.\n\nIf no `version-regexp` list entry matches, the application\nspecification will fail validation, and cannot be stored.",
      "items": {
        "additionalProperties": false,
        "properties": {
          "method": {
            "description": "\n- `stop-and-restart`: First all running service instances are stopped, then the new services instances are started.\n- `per-service`: The services are upgraded in order, according to the specification in `services`.\n\n",
            "format": "enumeration",
            "type": "string"
          },
          "services": {
            "description": "_Valid when: `../method = 'per-service'`_\n\nThe order of the entries in this list is significant.\n\nThe services are upgraded in the order specified in this list.\n\nIf a service is not modified in the new version of the application,\nits service instances are not restarted.\n\nIf the entry refers to a service that is no longer present (i.e.,\na service that is removed in the new version), all its instances\nare stopped when this entry is handled.  In this way, the\nmoment old services are stopped can be controlled.\n\nIf the entry refers to a service that was not present before (i.e.,\na service that is added in the new version), all its instances\nare started when this entry is handled.  In this way, the\nmoment new services are started can be controlled.\n\nIf a service is modified but not present in this list, it\nis handled after all entries in this list have been\nhandled.  First all its instances are stopped and then the\nnew service instances are started",
            "items": {
              "additionalProperties": false,
              "properties": {
                "healthy-time": {
                  "default": "0s",
                  "description": "A duration in years, days, hours, minutes and seconds.\n\nFormat is `[<digits>y][<digits>d][<digits>m][<digits>s]`.\n\nExamples: `1y2d5h`, `5h` or `10m30s`\n\n_Valid when: `../instances-in-parallel`_\n\nSpecifies how long time the system should wait after a\nsuccessful upgrade of the last set of instances, before\ncontinuing with the upgrade.  The upgrade of an\ninstance is considered successful when the instance has\n`oper-status` `running`, i.e., its `startup` and\n`readiness` probes have succeeded.",
                  "format": "duration",
                  "type": "string"
                },
                "instances-in-parallel": {
                  "description": "If this field is set, the specified number of service\ninstances are upgraded in parallel.  Otherwise all\nremaining service instances are upgraded at the same\ntime.",
                  "format": "uint32",
                  "type": "integer"
                },
                "name": {
                  "description": "",
                  "format": "name",
                  "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "version-regexp": {
            "description": "PCRE regular expression.\n\nA PCRE regular expression used to match against the\napplication's version.",
            "format": "regexp",
            "type": "string"
          }
        },
        "required": [
          "method",
          "version-regexp"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "version": {
      "description": "The version of the application.",
      "format": "version",
      "pattern": "^[a-zA-Z0-9\\-.+]+$",
      "type": "string"
    }
  },
  "required": [
    "services",
    "name"
  ],
  "title": "application",
  "type": "object"
}
